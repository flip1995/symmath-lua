{
	{hidden=false, input="-- the exported SymMath file is made with 'fixVariableNames==false', \n-- so set this to 'false' for it to load correctly.\nsymmath.fixVariableNames = false", output="false", outputtype="html", uid=5},
	{hidden=false, input="-- alright here are the PDEs of the x-derivatives\nsys = fromlua(file['Z4 - flux PDE noSource.lua'], nil, nil, _ENV);", output="", outputtype="html", uid=1},
	{hidden=false, input="Ut_full = sys[1]\nprint(Ut_full:T());", output="$\\left[\\begin{array}{cccccccccccccccccccccccccccccccccccccccccccccccccc} \\frac{\\partial \\alpha}{\\partial t}& \\frac{\\partial { {{ \\gamma} _x} _x}}{\\partial t}& \\frac{\\partial { {{ \\gamma} _x} _y}}{\\partial t}& \\frac{\\partial { {{ \\gamma} _x} _z}}{\\partial t}& \\frac{\\partial { {{ \\gamma} _y} _y}}{\\partial t}& \\frac{\\partial { {{ \\gamma} _y} _z}}{\\partial t}& \\frac{\\partial { {{ \\gamma} _z} _z}}{\\partial t}& \\frac{\\partial { { a} _x}}{\\partial t}& \\frac{\\partial { { a} _y}}{\\partial t}& \\frac{\\partial { { a} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _x} _x}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _x} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _x} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _x} _x}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _x} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _x} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _y} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _y} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _x} _x}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _x} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _x} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _y} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _z} _z}}{\\partial t}& \\frac{\\partial { {{ K} _x} _x}}{\\partial t}& \\frac{\\partial { {{ K} _x} _y}}{\\partial t}& \\frac{\\partial { {{ K} _x} _z}}{\\partial t}& \\frac{\\partial { {{ K} _y} _y}}{\\partial t}& \\frac{\\partial { {{ K} _y} _z}}{\\partial t}& \\frac{\\partial { {{ K} _z} _z}}{\\partial t}& \\frac{\\partial \\Theta}{\\partial t}& \\frac{\\partial { { Z} _x}}{\\partial t}& \\frac{\\partial { { Z} _y}}{\\partial t}& \\frac{\\partial { { Z} _z}}{\\partial t}& \\frac{\\partial { { \\beta} ^x}}{\\partial t}& \\frac{\\partial { { \\beta} ^y}}{\\partial t}& \\frac{\\partial { { \\beta} ^z}}{\\partial t}& \\frac{\\partial { {{ b} ^x} _x}}{\\partial t}& \\frac{\\partial { {{ b} ^x} _y}}{\\partial t}& \\frac{\\partial { {{ b} ^x} _z}}{\\partial t}& \\frac{\\partial { {{ b} _x} ^y}}{\\partial t}& \\frac{\\partial { {{ b} ^y} _y}}{\\partial t}& \\frac{\\partial { {{ b} ^y} _z}}{\\partial t}& \\frac{\\partial { {{ b} _x} ^z}}{\\partial t}& \\frac{\\partial { {{ b} _y} ^z}}{\\partial t}& \\frac{\\partial { {{ b} ^z} _z}}{\\partial t}\\end{array}\\right]$<br>\n", outputtype="html", uid=6},
	{hidden=false, input="Ux_full = sys[2][2]\nprint(Ux_full:T());", output="$\\left[\\begin{array}{cccccccccccccccccccccccccccccccccccccccccccccccccc} { { \\alpha} _{,x}}& { {{{ \\gamma} _x} _x} _{,x}}& { {{{ \\gamma} _x} _y} _{,x}}& { {{{ \\gamma} _x} _z} _{,x}}& { {{{ \\gamma} _y} _y} _{,x}}& { {{{ \\gamma} _y} _z} _{,x}}& { {{{ \\gamma} _z} _z} _{,x}}& { {{ a} _x} _{,x}}& { {{ a} _y} _{,x}}& { {{ a} _z} _{,x}}& { {{{{ d} _x} _x} _x} _{,x}}& { {{{{ d} _x} _x} _y} _{,x}}& { {{{{ d} _x} _x} _z} _{,x}}& { {{{{ d} _x} _y} _y} _{,x}}& { {{{{ d} _x} _y} _z} _{,x}}& { {{{{ d} _x} _z} _z} _{,x}}& { {{{{ d} _y} _x} _x} _{,x}}& { {{{{ d} _y} _x} _y} _{,x}}& { {{{{ d} _y} _x} _z} _{,x}}& { {{{{ d} _y} _y} _y} _{,x}}& { {{{{ d} _y} _y} _z} _{,x}}& { {{{{ d} _y} _z} _z} _{,x}}& { {{{{ d} _z} _x} _x} _{,x}}& { {{{{ d} _z} _x} _y} _{,x}}& { {{{{ d} _z} _x} _z} _{,x}}& { {{{{ d} _z} _y} _y} _{,x}}& { {{{{ d} _z} _y} _z} _{,x}}& { {{{{ d} _z} _z} _z} _{,x}}& { {{{ K} _x} _x} _{,x}}& { {{{ K} _x} _y} _{,x}}& { {{{ K} _x} _z} _{,x}}& { {{{ K} _y} _y} _{,x}}& { {{{ K} _y} _z} _{,x}}& { {{{ K} _z} _z} _{,x}}& { { \\Theta} _{,x}}& { {{ Z} _x} _{,x}}& { {{ Z} _y} _{,x}}& { {{ Z} _z} _{,x}}& { {{ \\beta} ^x} _{,x}}& { {{ \\beta} ^y} _{,x}}& { {{ \\beta} ^z} _{,x}}& { {{{ b} ^x} _x} _{,x}}& { {{{ b} ^x} _y} _{,x}}& { {{{ b} ^x} _z} _{,x}}& { {{{ b} ^y} _x} _{,x}}& { {{{ b} ^y} _y} _{,x}}& { {{{ b} ^y} _z} _{,x}}& { {{{ b} ^z} _x} _{,x}}& { {{{ b} ^z} _y} _{,x}}& { {{{ b} ^z} _z} _{,x}}\\end{array}\\right]$<br>\n", outputtype="html", uid=4},
	{hidden=false, input="n_full = #Ut_full\nassert(n_full == 50)", output="50", outputtype="html", uid=19},
	{hidden=false, input="J_full = sys[2][1];\nassert(Matrix:isa(J_full));\nprint(Array(J_full:dim()))\nassert(Array{n_full,n_full} == Array(J_full:dim()))\n;", output="$\\left[\\begin{array}{cc} 50& 50\\end{array}\\right]$<br>\n", outputtype="html", uid=9},
	{hidden=false, input="-- ok so lets get rid of the gauge and shift rows and columns\n\nUt = Ut_full:clone()\nUx = Ux_full:clone()\nJ = J_full:clone()\nlocal remove = table()\n\9:append(range(1,7))\9\9\9\9\9-- remove alpha, gamma_ij\n\9:append(range(n_full-12+1,n_full))\9-- remove beta^i, b^i_j\nprint(remove:concat';')\nfor _,i in ipairs(remove:reverse()) do\n\9table.remove(Ut,i)\n\9table.remove(Ux,i)\n\9table.remove(J,i)\n\9for j=1,#J do\n\9\9table.remove(J[j], i)\n\9end\nend;", output="1;2;3;4;5;6;7;39;40;41;42;43;44;45;46;47;48;49;50<br>\n", outputtype="html", uid=7},
	{hidden=false, input="Ut:T()", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} \\frac{\\partial { { a} _x}}{\\partial t}& \\frac{\\partial { { a} _y}}{\\partial t}& \\frac{\\partial { { a} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _x} _x}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _x} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _x} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _x} _x}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _x} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _x} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _y} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _y} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _x} _x}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _x} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _x} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _y} _z}}{\\partial t}& \\frac{\\partial { {{{ d} _z} _z} _z}}{\\partial t}& \\frac{\\partial { {{ K} _x} _x}}{\\partial t}& \\frac{\\partial { {{ K} _x} _y}}{\\partial t}& \\frac{\\partial { {{ K} _x} _z}}{\\partial t}& \\frac{\\partial { {{ K} _y} _y}}{\\partial t}& \\frac{\\partial { {{ K} _y} _z}}{\\partial t}& \\frac{\\partial { {{ K} _z} _z}}{\\partial t}& \\frac{\\partial \\Theta}{\\partial t}& \\frac{\\partial { { Z} _x}}{\\partial t}& \\frac{\\partial { { Z} _y}}{\\partial t}& \\frac{\\partial { { Z} _z}}{\\partial t}\\end{array}\\right]$", outputtype="html", uid=10},
	{hidden=false, input="Ux:T()", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} { {{ a} _x} _{,x}}& { {{ a} _y} _{,x}}& { {{ a} _z} _{,x}}& { {{{{ d} _x} _x} _x} _{,x}}& { {{{{ d} _x} _x} _y} _{,x}}& { {{{{ d} _x} _x} _z} _{,x}}& { {{{{ d} _x} _y} _y} _{,x}}& { {{{{ d} _x} _y} _z} _{,x}}& { {{{{ d} _x} _z} _z} _{,x}}& { {{{{ d} _y} _x} _x} _{,x}}& { {{{{ d} _y} _x} _y} _{,x}}& { {{{{ d} _y} _x} _z} _{,x}}& { {{{{ d} _y} _y} _y} _{,x}}& { {{{{ d} _y} _y} _z} _{,x}}& { {{{{ d} _y} _z} _z} _{,x}}& { {{{{ d} _z} _x} _x} _{,x}}& { {{{{ d} _z} _x} _y} _{,x}}& { {{{{ d} _z} _x} _z} _{,x}}& { {{{{ d} _z} _y} _y} _{,x}}& { {{{{ d} _z} _y} _z} _{,x}}& { {{{{ d} _z} _z} _z} _{,x}}& { {{{ K} _x} _x} _{,x}}& { {{{ K} _x} _y} _{,x}}& { {{{ K} _x} _z} _{,x}}& { {{{ K} _y} _y} _{,x}}& { {{{ K} _y} _z} _{,x}}& { {{{ K} _z} _z} _{,x}}& { { \\Theta} _{,x}}& { {{ Z} _x} _{,x}}& { {{ Z} _y} _{,x}}& { {{ Z} _z} _{,x}}\\end{array}\\right]$", outputtype="html", uid=11},
	{hidden=false, input="Ux = Ut:replace(t,x)\nprint(Ux:T());", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} \\frac{\\partial { { a} _x}}{\\partial x}& \\frac{\\partial { { a} _y}}{\\partial x}& \\frac{\\partial { { a} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _x} _x} _x}}{\\partial x}& \\frac{\\partial { {{{ d} _x} _x} _y}}{\\partial x}& \\frac{\\partial { {{{ d} _x} _x} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial x}& \\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _y} _x} _x}}{\\partial x}& \\frac{\\partial { {{{ d} _y} _x} _y}}{\\partial x}& \\frac{\\partial { {{{ d} _y} _x} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _y} _y} _y}}{\\partial x}& \\frac{\\partial { {{{ d} _y} _y} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _z} _x} _x}}{\\partial x}& \\frac{\\partial { {{{ d} _z} _x} _y}}{\\partial x}& \\frac{\\partial { {{{ d} _z} _x} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial x}& \\frac{\\partial { {{{ d} _z} _y} _z}}{\\partial x}& \\frac{\\partial { {{{ d} _z} _z} _z}}{\\partial x}& \\frac{\\partial { {{ K} _x} _x}}{\\partial x}& \\frac{\\partial { {{ K} _x} _y}}{\\partial x}& \\frac{\\partial { {{ K} _x} _z}}{\\partial x}& \\frac{\\partial { {{ K} _y} _y}}{\\partial x}& \\frac{\\partial { {{ K} _y} _z}}{\\partial x}& \\frac{\\partial { {{ K} _z} _z}}{\\partial x}& \\frac{\\partial \\Theta}{\\partial x}& \\frac{\\partial { { Z} _x}}{\\partial x}& \\frac{\\partial { { Z} _y}}{\\partial x}& \\frac{\\partial { { Z} _z}}{\\partial x}\\end{array}\\right]$<br>\n", outputtype="html", uid=36},
	{hidden=false, input="Us = Matrix(table.mapi(Ux, function(x) return x[1][1] end)):T()\nprint(Us:T());", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} { { a} _x}& { { a} _y}& { { a} _z}& { {{{ d} _x} _x} _x}& { {{{ d} _x} _x} _y}& { {{{ d} _x} _x} _z}& { {{{ d} _x} _y} _y}& { {{{ d} _x} _y} _z}& { {{{ d} _x} _z} _z}& { {{{ d} _y} _x} _x}& { {{{ d} _y} _x} _y}& { {{{ d} _y} _x} _z}& { {{{ d} _y} _y} _y}& { {{{ d} _y} _y} _z}& { {{{ d} _y} _z} _z}& { {{{ d} _z} _x} _x}& { {{{ d} _z} _x} _y}& { {{{ d} _z} _x} _z}& { {{{ d} _z} _y} _y}& { {{{ d} _z} _y} _z}& { {{{ d} _z} _z} _z}& { {{ K} _x} _x}& { {{ K} _x} _y}& { {{ K} _x} _z}& { {{ K} _y} _y}& { {{ K} _y} _z}& { {{ K} _z} _z}& \\Theta& { { Z} _x}& { { Z} _y}& { { Z} _z}\\end{array}\\right]$<br>\n", outputtype="html", uid=83},
	{hidden=false, input="J", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{f}}& {{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{f}}& {{2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{f}}& {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{f}}& {{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{f}}& {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{f}}& -{{{2}} {{\\alpha}} \\cdot {{f}}}& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\alpha& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\alpha& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\alpha& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\alpha& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\alpha& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\alpha& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ \\alpha& 0& 0& 0& 0& 0& {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}}& {{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}}& {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}}& {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}& 0& 0& 0& 0& 0& {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{2}} {{\\alpha}}}& 0& 0\\\\ 0& {\\frac{1}{2}} {\\alpha}& 0& 0& 0& 0& -{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}}& -{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}}& 0& -{{\\frac{1}{2}} {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}}& {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}& 0& {\\frac{1}{2}} {{{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}}}& {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}}& {\\frac{1}{2}} {{{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}}}& 0& {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{\\alpha}& 0\\\\ 0& 0& {\\frac{1}{2}} {\\alpha}& 0& 0& 0& 0& -{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}}& -{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}}& 0& 0& {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}& 0& 0& 0& -{{\\frac{1}{2}} {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}}& 0& {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}& {\\frac{1}{2}} {{{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}}}& {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}}& {\\frac{1}{2}} {{{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{\\alpha}\\\\ 0& 0& 0& 0& 0& 0& {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}& 0& 0& 0& -{{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}& 0& -{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}}& -{{{2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}}& 0& 0& 0& 0& {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}& 0& 0& 0& -{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}& 0& 0& -{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}}& 0& -{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}& 0& -{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}& 0& 0& 0& 0& 0& {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}& 0& 0& -{{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}& 0& -{{{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}}& -{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\left({{-{{{ {{ \\gamma} ^x} ^y}}^{2}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}}\\right)}}& {{2}} {{\\alpha}} \\cdot {{\\left({{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}{-{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}}}\\right)}}& {{\\alpha}} \\cdot {{\\left({{-{{{ {{ \\gamma} ^x} ^z}}^{2}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}}\\right)}}& 0& {{\\alpha}} \\cdot {{\\left({{{{ {{ \\gamma} ^x} ^y}}^{2}}{-{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}}}\\right)}}& {{\\alpha}} \\cdot {{\\left({{-{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}}\\right)}}& 0& {{\\alpha}} \\cdot {{\\left({{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}{-{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}}}\\right)}}& {{\\alpha}} \\cdot {{\\left({{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}{-{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}}}\\right)}}& 0& {{\\alpha}} \\cdot {{\\left({{-{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}}\\right)}}& {{\\alpha}} \\cdot {{\\left({{{{ {{ \\gamma} ^x} ^z}}^{2}}{-{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}}}\\right)}}& {{\\alpha}} \\cdot {{\\left({{-{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}}\\right)}}& {{\\alpha}} \\cdot {{\\left({{-{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}}\\right)}}& 0& 0& 0& 0& 0& 0& 0& 0& -{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}& -{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}}& -{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}}\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}& {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}& {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}}& {{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}}& {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}}& -{\\alpha}& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}& 0& -{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}}& -{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}}& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}}}& 0& -{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}}}& -{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}}}& 0& 0& 0& 0\\end{array}\\right]$", outputtype="html", uid=12},
	{hidden=false, input="eqns = table.mapi((Ut + J * Ux):simplifyAddMulDiv(), function(row,i)\n\9row = row[1]\n\9print(i,':',row)\n\9return row\nend);", output="1\9:\9${\\frac{\\partial { { a} _x}}{\\partial t}} + {{{-2}} {{\\alpha}} \\cdot {{f}} {{\\frac{\\partial \\Theta}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{f}} {{\\frac{\\partial { {{ K} _x} _x}}{\\partial x}}}} + {{{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{f}} {{\\frac{\\partial { {{ K} _y} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{f}} {{\\frac{\\partial { {{ K} _z} _z}}{\\partial x}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{f}} {{\\frac{\\partial { {{ K} _x} _y}}{\\partial x}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{f}} {{\\frac{\\partial { {{ K} _x} _z}}{\\partial x}}}} + {{{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{f}} {{\\frac{\\partial { {{ K} _y} _z}}{\\partial x}}}}$<br>\n2\9:\9$\\frac{\\partial { { a} _y}}{\\partial t}$<br>\n3\9:\9$\\frac{\\partial { { a} _z}}{\\partial t}$<br>\n4\9:\9${\\frac{\\partial { {{{ d} _x} _x} _x}}{\\partial t}} + {{{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _x} _x}}{\\partial x}}}}$<br>\n5\9:\9${\\frac{\\partial { {{{ d} _x} _x} _y}}{\\partial t}} + {{{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _x} _y}}{\\partial x}}}}$<br>\n6\9:\9${\\frac{\\partial { {{{ d} _x} _x} _z}}{\\partial t}} + {{{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _x} _z}}{\\partial x}}}}$<br>\n7\9:\9${\\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial t}} + {{{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _y} _y}}{\\partial x}}}}$<br>\n8\9:\9${\\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial t}} + {{{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _y} _z}}{\\partial x}}}}$<br>\n9\9:\9${\\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial t}} + {{{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _z} _z}}{\\partial x}}}}$<br>\n10\9:\9$\\frac{\\partial { {{{ d} _y} _x} _x}}{\\partial t}$<br>\n11\9:\9$\\frac{\\partial { {{{ d} _y} _x} _y}}{\\partial t}$<br>\n12\9:\9$\\frac{\\partial { {{{ d} _y} _x} _z}}{\\partial t}$<br>\n13\9:\9$\\frac{\\partial { {{{ d} _y} _y} _y}}{\\partial t}$<br>\n14\9:\9$\\frac{\\partial { {{{ d} _y} _y} _z}}{\\partial t}$<br>\n15\9:\9$\\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial t}$<br>\n16\9:\9$\\frac{\\partial { {{{ d} _z} _x} _x}}{\\partial t}$<br>\n17\9:\9$\\frac{\\partial { {{{ d} _z} _x} _y}}{\\partial t}$<br>\n18\9:\9$\\frac{\\partial { {{{ d} _z} _x} _z}}{\\partial t}$<br>\n19\9:\9$\\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial t}$<br>\n20\9:\9$\\frac{\\partial { {{{ d} _z} _y} _z}}{\\partial t}$<br>\n21\9:\9$\\frac{\\partial { {{{ d} _z} _z} _z}}{\\partial t}$<br>\n22\9:\9${\\frac{\\partial { {{ K} _x} _x}}{\\partial t}} + {{{\\alpha}} \\cdot {{\\frac{\\partial { { a} _x}}{\\partial x}}}} + {{{-2}} {{\\alpha}} \\cdot {{\\frac{\\partial { { Z} _x}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _x}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _x}}{\\partial x}}}} + {{{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial x}}}} + {{{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial x}}}}$<br>\n23\9:\9${\\frac{\\partial { {{ K} _x} _y}}{\\partial t}} + {{{\\frac{1}{2}}} {{\\alpha}} \\cdot {{\\frac{\\partial { { a} _y}}{\\partial x}}}} + {{{-1}} {{\\alpha}} \\cdot {{\\frac{\\partial { { Z} _y}}{\\partial x}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _x}}{\\partial x}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _y} _y}}{\\partial x}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _y} _z}}{\\partial x}}}}$<br>\n24\9:\9${\\frac{\\partial { {{ K} _x} _z}}{\\partial t}} + {{{\\frac{1}{2}}} {{\\alpha}} \\cdot {{\\frac{\\partial { { a} _z}}{\\partial x}}}} + {{{-1}} {{\\alpha}} \\cdot {{\\frac{\\partial { { Z} _z}}{\\partial x}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _x}}{\\partial x}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial x}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _z} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _z}}{\\partial x}}}}$<br>\n25\9:\9${\\frac{\\partial { {{ K} _y} _y}}{\\partial t}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _y} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial x}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _y}}{\\partial x}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _y} _z}}{\\partial x}}}}$<br>\n26\9:\9${\\frac{\\partial { {{ K} _y} _z}}{\\partial t}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial x}}}}$<br>\n27\9:\9${\\frac{\\partial { {{ K} _z} _z}}{\\partial t}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _z} _z}}{\\partial x}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _z}}{\\partial x}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _z}}{\\partial x}}}}$<br>\n28\9:\9${\\frac{\\partial \\Theta}{\\partial t}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { { Z} _x}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { { Z} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { { Z} _z}}{\\partial x}}}} + {{{-1}} {{\\alpha}} \\cdot {{{{ {{ \\gamma} ^x} ^y}}^{2}}} {{\\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial x}}}} + {{{\\alpha}} \\cdot {{{{ {{ \\gamma} ^x} ^y}}^{2}}} {{\\frac{\\partial { {{{ d} _y} _x} _y}}{\\partial x}}}} + {{{-1}} {{\\alpha}} \\cdot {{{{ {{ \\gamma} ^x} ^z}}^{2}}} {{\\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial x}}}} + {{{\\alpha}} \\cdot {{{{ {{ \\gamma} ^x} ^z}}^{2}}} {{\\frac{\\partial { {{{ d} _z} _x} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _z} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _x} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _x} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _y} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _y} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _y} _z} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _z} _y} _z}}{\\partial x}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial x}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{{ d} _x} _y} _z}}{\\partial x}}}}$<br>\n29\9:\9${\\frac{\\partial { { Z} _x}}{\\partial t}} + {{{-1}} {{\\alpha}} \\cdot {{\\frac{\\partial \\Theta}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _x} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _x} _z}}{\\partial x}}}} + {{{{ {{ \\gamma} ^y} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _y} _y}}{\\partial x}}}} + {{{{ {{ \\gamma} ^z} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _z} _z}}{\\partial x}}}} + {{{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _y} _z}}{\\partial x}}}}$<br>\n30\9:\9${\\frac{\\partial { { Z} _y}}{\\partial t}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _x} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _y} _y}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _y} _z}}{\\partial x}}}}$<br>\n31\9:\9${\\frac{\\partial { { Z} _z}}{\\partial t}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _x} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _y} _z}}{\\partial x}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\alpha}} \\cdot {{\\frac{\\partial { {{ K} _z} _z}}{\\partial x}}}}$<br>\n", outputtype="html", uid=20},
	{hidden=false, input="n = #Ut", output="31", outputtype="html", uid=23},
	{hidden=false, input="x,y,z = vars('x','y','z')", output="$x$\9$y$\9$z$", outputtype="html", uid=136},
	{hidden=false, input="Tensor.Chart{coords={x,y,z}}\nTensor.Chart{coords={y,z}, symbols='pqrstuvw'}\nTensor.Chart{coords={x}, symbols='x'}\nTensor.Chart{coords={y}, symbols='y'}\nTensor.Chart{coords={z}, symbols='z'}", output="", outputtype="html", uid=137},
	{hidden=false, input="xs = {'x', 'y', 'z'}\nsyms = {'xx', 'xy', 'xz', 'yy', 'yz', 'zz'}\nfunction from6to3x3(ij)\n\9local i,j = table.unpack(({{1,1},{1,2},{1,3},{2,2},{2,3},{3,3}})[ij])\n\9return i,j,xs[i],xs[j]\nend\nfunction from3x3to6(i,j)\n\9local ij = ({{1, 2, 3}, {2, 4, 5}, {3, 5, 6}})[i][j]\n\9return ij,syms[ij]\nend\nfunction sym(a,b) if a > b then a,b = b,a end return a..b end\nfunction xperpiter()\n\9return coroutine.wrap(function()\n\9\9for j=2,3 do\n\9\9\9coroutine.yield(j, xs[j])\n\9\9end\n\9end)\nend\nfunction symperpiter()\n\9return coroutine.wrap(function()\n\9\9for i=2,3 do\n\9\9\9for j=i,3 do\n\9\9\9\9local ij,xij = from3x3to6(i,j)\n\9\9\9\9coroutine.yield(ij,xij,i,xs[i],j,xs[j])\n\9\9\9end\n\9\9end\n\9end)\nend\n;", output="", outputtype="html", uid=44},
	{hidden=false, input="a_index = 1\nd_index = 4\nK_index = 22\nTheta_index = 28\nZ_index = 29\n\naModes = Tensor('_k', function(k) return eqns[a_index+k-1] end)\ndModes = Tensor('_kij', function(k,i,j) return eqns[d_index+6*(k-1)+from3x3to6(i,j)-1] end)\nKModes = Tensor('_ij', function(i,j) return eqns[K_index+from3x3to6(i,j)-1] end)\nThetaMode = eqns[Theta_index]\nZModes = Tensor('_k', function(k) return eqns[Z_index+k-1] end)\n\naVars = Tensor('_k', function(k) return Us[a_index+k-1][1] end)\ndVars = Tensor('_kij', function(k,i,j) return Us[d_index+6*(k-1)+from3x3to6(i,j)-1][1] end)\nKVars = Tensor('_ij', function(i,j) return Us[K_index+from3x3to6(i,j)-1][1] end)\nZVars = Tensor('_k', function(k) return Us[Z_index+k-1][1] end)\n;", output="", outputtype="html", uid=42},
	{hidden=false, input="-- ok now the fun begins\n-- the challenge is to, using these 31 equations, add/subtract/scale them together to put in the form of w_,t + lambda w_,x = 0\n-- the easy ones are the d/dt's alone -- those are lambda=0's", output="", outputtype="html", uid=22},
	{hidden=false, input="-- this is an ugly way to get variables ...", output="", outputtype="html", uid=138},
	{hidden=false, input="alpha = dModes'_xxx'():polyCoeffs(KVars'_xx'():diff(x))[1]", output="$\\alpha$", outputtype="html", uid=29},
	{hidden=false, input="local axMode = aModes'_x'()\ngUxx = (axMode:polyCoeffs(KVars'_xx'():diff(x))[1] / (alpha * f))()\nlocal gUxy = (axMode:polyCoeffs(KVars'_xy'():diff(x))[1] / (2 * alpha * f))()\nlocal gUxz = (axMode:polyCoeffs(KVars'_xz'():diff(x))[1] / (2 * alpha * f))()\nlocal gUyy = (axMode:polyCoeffs(KVars'_yy'():diff(x))[1] / (alpha * f))()\nlocal gUyz = (axMode:polyCoeffs(KVars'_yz'():diff(x))[1] / (2 * alpha * f))()\nlocal gUzz = (axMode:polyCoeffs(KVars'_zz'():diff(x))[1] / (alpha * f))()\ngUs = Tensor('^ij',\n\9{gUxx, gUxy, gUxz},\n\9{gUxy, gUyy, gUyz},\n\9{gUxz, gUyz, gUzz})\nprint(gUs)\n;", output="$\\overset{i\\downarrow j\\rightarrow}{\\left[\\begin{array}{ccc} { {{ \\gamma} ^x} ^x}& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}\\\\ { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^y} ^y}& { {{ \\gamma} ^y} ^z}\\\\ { {{ \\gamma} ^x} ^z}& { {{ \\gamma} ^y} ^z}& { {{ \\gamma} ^z} ^z}\\end{array}\\right]}$<br>\n", outputtype="html", uid=67},
	{hidden=false, input="lambda = var'\\\\lambda'", output="$\\lambda$", outputtype="html", uid=43},
	{hidden=false, input="-- verify it's a mode ...\n-- go through the Ut[i][1] vector, see if the term exists in expr, look at the ratio of its coeff with the associated Ux[i][1] coeff (even if it is zero)\n-- and then make sure there's nothing else in the expr except those pairs\n-- and then make sure all ratios match\n-- and then output the coefficients of the Ut[i][1]'s", output="", outputtype="html", uid=85},
	{hidden=false, input="function getTCoeffs(expr)\n\9return range(n):mapi(function(i)\n\9\9return expr:polyCoeffs(Ut[i][1])[1] or Constant(0)\n\9end)\nend\nfunction getXCoeffs(expr)\n\9return range(n):mapi(function(i)\n\9\9return expr:polyCoeffs(Ux[i][1])[1] or Constant(0)\n\9end)\nend", output="", outputtype="html", uid=86},
	{hidden=false, input="allLeftVectors = table()\nallEigenvalues = table()\n;", output="", outputtype="html", uid=88},
	{hidden=false, input="function verifyMode(expr)\n\9expr = expr:simplifyAddMulDiv()\n\9local tcoeffs = getTCoeffs(expr)\n\9local xcoeffs = getXCoeffs(expr)\n\9local ratios = range(n):mapi(function(i)\n\9\9return (xcoeffs[i] / tcoeffs[i])()\n\9end)\n\n\9local indexes = table()\9\9-- all valid indexes for U_,t\n\9local nonindexes = table()\9-- all the other indexes. make sure no U_,x's exist here\n\9for i,tc in ipairs(tcoeffs) do\n\9\9if Constant.isValue(tc, 0) then\n\9\9\9nonindexes:insert(i)\n\9\9else\n\9\9\9indexes:insert(i)\n\9\9end\n\9end\n\n\9-- make sure there are no non-t's in the x's\n\9for _,i in ipairs(nonindexes) do\n\9\9if not Constant.isValue(xcoeffs[i], 0) then\n\9\9\9print(Matrix{var'var', var'tcoeffs', var'xcoeffs', var'ratios'}:T():eq(Matrix(Us:T()[1], tcoeffs, xcoeffs, ratios)))\n\9\9\9print(\"var \"..Us[i][1]..\" got an x coefficient \"..xcoeffs[i]..\" that didn't have a t coefficient\")\n\9\9\9return\n\9\9end \n\9end\n\9assert(#indexes > 0, \"this expression had no U_,t's in it\")\n\9local ratio\n\9for _,i in ipairs(indexes) do\n\9\9local ratio2 = ratios[i]\n\9\9if not ratio then\n\9\9\9ratio = ratio2\n\9\9elseif Constant.isValue((ratio - ratio2)(), 0) then\n\9\9\9if ratio2:countNodes() < ratio:countNodes() then\n\9\9\9\9ratio = ratio2\n\9\9\9end\n\9\9else\n\9\9\9print(Matrix{var'var', var'tcoeffs', var'xcoeffs', var'ratios'}:T():eq(Matrix(Us:T()[1], tcoeffs, xcoeffs, ratios)))\n\9\9\9print(\"var \"..Us[i][1]..\" ratios of U_,x / U_,t = \"..ratio2..\" didn't match previous ratio \"..ratio)\n\9\9\9return\n\9\9end\n\9end\n\9-- TODO return an Array, and TODO make single-degree Array's print as rows instead of columns\n\9print(Matrix(tcoeffs), 'has eigenvalue', ratio)\n\9-- and ratio is the eigenvalue\n\9allLeftVectors:insert(tcoeffs)\n\9allEigenvalues:insert(ratio)\nend", output="", outputtype="html", uid=34},
	{hidden=false, input="for _,eqn in ipairs(eqns) do\n\9-- if the mode is just a _,t with nothign else ...\n\9if Derivative:isa(eqn) and Variable:isa(eqn[1]) and eqn[2] == t then\n\9\9verifyMode(eqn)\n\9end\nend;", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n", outputtype="html", uid=92},
	{hidden=false, input="-- 1 var a_x,t with lambda=0 = 1 mode\nlocal mode = (\n\9f * gUs'^xx' * dModes'_xxx'\n\9- aModes'_x'\n\9+ 2 * f * ZModes'_x'\n\9- f * gUs'^pq' * dModes'_xpq'\n)()\nverifyMode(mode)\n;", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} -1& 0& 0& {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{f}}& 0& 0& {{-1}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{f}}& {{-2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{f}}& {{-1}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{f}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{2}} {{f}}& 0& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n", outputtype="html", uid=97},
	{hidden=false, input="-- 2 vars Z_q,t with one root lambda=0 so 2 modes total\nlocal modes = (ZModes'_q' + gUs'^xi' * dModes'_xiq')()\nassert(Array(modes:dim()) == Array{2})\nfor q=1,2 do\n\9verifyMode(modes[q])\nend\n;", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1\\end{array}\\right]$\9has eigenvalue\9$0$<br>\n", outputtype="html", uid=96},
	{hidden=false, input="-- next we have 3 vars, K_pq,t, each with two modes of lambda=+-sqrt(gamma^xx), so this makes 6 modes:\nmodes = (\n\9lambda * KModes'_pq'\n\9+ gUs'^xx' * (dModes'_xpq' - dModes'_pqx' - dModes'_qpx')\n\9+ gUs'^xr' * (dModes'_rpq' - dModes'_pqr' - dModes'_qpr')\n)()\nassert(Array(modes:dim()) == Array{2,2})\nfor p=1,2 do\n\9for q=p,2 do\n\9\9local mode = modes[p][q]\n\9\9verifyMode(mode:replace(lambda, sqrt(gUxx)):simplifyAddMulDiv())\n\9\9verifyMode(mode:replace(lambda, -sqrt(gUxx)):simplifyAddMulDiv())\n\9end\nend\n;", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& {{-2}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-2}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9${{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& {{-2}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-2}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$-{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& 0& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9${{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& 0& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$-{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^y}& 0& 0& {{-2}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-2}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9${{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^y}& 0& 0& {{-2}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-2}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$-{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n", outputtype="html", uid=75},
	{hidden=false, input="-- 2 vars K_xq,t with two roots each lambda=+-sqrt(gamma^xx) so 4 modes total\nlocal modes = (\n\9lambda * KModes'_xq'\n\9+ frac(1,2) * aModes'_q'\n\9- frac(1,2) * gUs'^xx' * dModes'_qxx'\n\9+ gUs'^xr' * dModes'_rxq'\n\9- gUs'^xr' * dModes'_xqr'\n\9+ frac(1,2) * gUs'^rs' * dModes'_qrs'\n\9- ZModes'_q'\n)()\nassert(Array(modes:dim()) == Array{2})\nfor q=1,2 do\n\9local mode = modes[q]\n\9verifyMode(mode:replace(lambda, sqrt(gUxx)))\n\9verifyMode(mode:replace(lambda, -sqrt(gUxx)))\nend\n;", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& \\frac{1}{2}& 0& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& {{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}}& { {{ \\gamma} ^x} ^y}& 0& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}}& { {{ \\gamma} ^y} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}}& 0& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0& 0& 0& -1& 0\\end{array}\\right]$\9has eigenvalue\9${{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& \\frac{1}{2}& 0& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& {{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}}& { {{ \\gamma} ^x} ^y}& 0& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}}& { {{ \\gamma} ^y} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}}& 0& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0& 0& 0& -1& 0\\end{array}\\right]$\9has eigenvalue\9$-{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& \\frac{1}{2}& 0& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& { {{ \\gamma} ^x} ^y}& 0& 0& 0& {{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}}& 0& { {{ \\gamma} ^x} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}}& { {{ \\gamma} ^y} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}}& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0& 0& 0& -1\\end{array}\\right]$\9has eigenvalue\9${{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& \\frac{1}{2}& 0& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& { {{ \\gamma} ^x} ^y}& 0& 0& 0& {{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}}& 0& { {{ \\gamma} ^x} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}}& { {{ \\gamma} ^y} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}}& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0& 0& 0& -1\\end{array}\\right]$\9has eigenvalue\9$-{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n", outputtype="html", uid=76},
	{hidden=false, input="-- 1 var Theta_,t with two roots each lambda=+-sqrt(gamma^xx) so 2 modes total\nlocal mode = (\n\9lambda * ThetaMode\n\9- gUs'^xx' * ZModes'_x'\n\9- gUs'^xp' * ZModes'_p'\n\9+ (gUs'^xp' * gUs'^xq' - gUs'^xx' * gUs'^pq') * (dModes'_qxp' - dModes'_xpq')\n\9+ (gUs'^pq' * gUs'^xr' - gUs'^pr' * gUs'^xq') * dModes'_rpq'\n)()\nverifyMode(mode:replace(lambda, sqrt(gUxx)))\nverifyMode(mode:replace(lambda, -sqrt(gUxx)))\n;", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& {{{-1}} {{{{ {{ \\gamma} ^x} ^y}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& {{{-1}} {{{{ {{ \\gamma} ^x} ^z}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& 0& {{{ {{ \\gamma} ^x} ^y}}^{2}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& 0& {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}& 0& {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& {{{ {{ \\gamma} ^x} ^z}}^{2}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}& 0& 0& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}\\end{array}\\right]$\9has eigenvalue\9${{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& {{{-1}} {{{{ {{ \\gamma} ^x} ^y}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& {{{-1}} {{{{ {{ \\gamma} ^x} ^z}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& 0& {{{ {{ \\gamma} ^x} ^y}}^{2}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& 0& {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}& 0& {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& {{{ {{ \\gamma} ^x} ^z}}^{2}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}& 0& 0& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}\\end{array}\\right]$\9has eigenvalue\9$-{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n", outputtype="html", uid=79},
	{hidden=false, input="-- 1 var with two roots λ=±√(f γ^xx) so 2 modes total\nlocal mode = (\n\9lambda * (gUs'^ij' * KModes'_ij' - 2 * ThetaMode)\n\9+ gUs'^xk' * aModes'_k'\n)()\nverifyMode(mode:replace(lambda, sqrt(f*gUxx)))\nverifyMode(mode:replace(lambda, -sqrt(f*gUxx)))\n;", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} { {{ \\gamma} ^x} ^x}& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}} {{{f}^{\\frac{1}{2}}}}& {{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-2}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9${{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}} {{\\sqrt{f}}}$<br>\n$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} { {{ \\gamma} ^x} ^x}& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}} {{{f}^{\\frac{1}{2}}}}& {{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-1}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-1}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{2}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& 0& 0& 0\\end{array}\\right]$\9has eigenvalue\9$-{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}} {{\\sqrt{f}}}}$<br>\n", outputtype="html", uid=82},
	{hidden=false, input="#allLeftVectors, #allEigenvalues", output="31\00931", outputtype="html", uid=90},
	{hidden=false, input="Array(allEigenvalues)", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}} {{\\sqrt{f}}}& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}} {{\\sqrt{f}}}}\\end{array}\\right]$", outputtype="html", uid=95},
	{hidden=false, input="LMat = Matrix(allLeftVectors:unpack())", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ -1& 0& 0& {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{f}}& 0& 0& {{-1}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{f}}& {{-2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{f}}& {{-1}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{f}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{2}} {{f}}& 0& 0\\\\ 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0\\\\ 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1\\\\ 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& {{-2}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-2}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& {{-2}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-2}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& 0& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& 0& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^y}& 0& 0& {{-2}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-2}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^x}& 0& 0& 0& 0& 0& { {{ \\gamma} ^x} ^y}& 0& 0& {{-2}} {{{ {{ \\gamma} ^x} ^x}}}& 0& {{-2}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0\\\\ 0& \\frac{1}{2}& 0& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& {{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}}& { {{ \\gamma} ^x} ^y}& 0& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}}& { {{ \\gamma} ^y} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}}& 0& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0& 0& 0& -1& 0\\\\ 0& \\frac{1}{2}& 0& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& {{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}}& { {{ \\gamma} ^x} ^y}& 0& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}}& { {{ \\gamma} ^y} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}}& 0& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0& 0& 0& -1& 0\\\\ 0& 0& \\frac{1}{2}& 0& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& { {{ \\gamma} ^x} ^y}& 0& 0& 0& {{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}}& 0& { {{ \\gamma} ^x} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}}& { {{ \\gamma} ^y} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}}& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& 0& 0& 0& 0& 0& 0& -1\\\\ 0& 0& \\frac{1}{2}& 0& 0& 0& 0& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}& 0& 0& { {{ \\gamma} ^x} ^y}& 0& 0& 0& {{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}}& 0& { {{ \\gamma} ^x} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}}& { {{ \\gamma} ^y} ^z}& {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}}& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& 0& 0& 0& 0& 0& 0& -1\\\\ 0& 0& 0& 0& 0& 0& {{{-1}} {{{{ {{ \\gamma} ^x} ^y}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& {{{-1}} {{{{ {{ \\gamma} ^x} ^z}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& 0& {{{ {{ \\gamma} ^x} ^y}}^{2}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& 0& {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}& 0& {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& {{{ {{ \\gamma} ^x} ^z}}^{2}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}& 0& 0& 0& 0& 0& 0& 0& {{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}\\\\ 0& 0& 0& 0& 0& 0& {{{-1}} {{{{ {{ \\gamma} ^x} ^y}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& {{{-1}} {{{{ {{ \\gamma} ^x} ^z}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& 0& {{{ {{ \\gamma} ^x} ^y}}^{2}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& 0& {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}& 0& {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}& {{{ {{ \\gamma} ^x} ^z}}^{2}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}& 0& 0& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}& {{-1}} {{{ {{ \\gamma} ^x} ^x}}}& {{-1}} {{{ {{ \\gamma} ^x} ^y}}}& {{-1}} {{{ {{ \\gamma} ^x} ^z}}}\\\\ { {{ \\gamma} ^x} ^x}& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}} {{{f}^{\\frac{1}{2}}}}& {{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-2}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& 0& 0& 0\\\\ { {{ \\gamma} ^x} ^x}& { {{ \\gamma} ^x} ^y}& { {{ \\gamma} ^x} ^z}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{-1}} {{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}} {{{f}^{\\frac{1}{2}}}}& {{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-1}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{-1}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& {{2}} {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}} {{{f}^{\\frac{1}{2}}}}& 0& 0& 0\\end{array}\\right]$", outputtype="html", uid=91},
	{hidden=false, input="Array(LMat:dim())", output="$\\left[\\begin{array}{cc} 31& 31\\end{array}\\right]$", outputtype="html", uid=93},
	{hidden=false, input="-- that's a good sign.  not degenerate.\nLMat:det()", output="$-{{{128}} {{{{{{ {{ \\gamma} ^x} ^x}}^{12}}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}} {{{{f}} {{\\sqrt{f}}}}}}$", outputtype="html", uid=98},
	{hidden=false, input="RMat = LMat:inv()", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^y}}}& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}\\\\ 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ \\frac{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{\\left({{-{1}} + {f}}\\right)}}}{{{f}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}& \\frac{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{\\left({{-{1}} + {f}}\\right)}}}{{{f}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^y}}}& 0& 0& 0& 0& 0& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& 0& \\frac{1}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{f}}}& 0& 0& -{\\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}}& -{\\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}}& -{\\frac{{ {{ \\gamma} ^y} ^z}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^y} ^z}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}}& -{\\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& \\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}& \\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}& \\frac{1}{{{2}} {{f}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}& \\frac{1}{{{2}} {{f}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}\\\\ -{\\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& \\frac{1}{2}& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^y}}}& 0& -{\\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^y} ^z}}}& -{\\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& 0& \\frac{1}{{ {{ \\gamma} ^x} ^x}}& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0\\\\ 0& -{\\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^y}}}& 0& 0& 0& \\frac{1}{2}& 0& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^z}}}& -{\\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^y} ^z}}}& -{\\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& \\frac{1}{{ {{ \\gamma} ^x} ^x}}& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0\\\\ 0& 0& 0& 2& 0& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^y}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{{2}} {{{ {{ \\gamma} ^x} ^z}}}}& 0& 0& 0& 0& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^z}}}& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 1& 0& 0& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^z}}& 0& 1& 0& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^y}}& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& -{{\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^y}}}& 0& 0& 2& 0& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{{2}} {{{ {{ \\gamma} ^x} ^y}}}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^x} ^z}}& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{\\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}}}& \\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}}& -{\\frac{{ {{ \\gamma} ^y} ^z}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& \\frac{{ {{ \\gamma} ^y} ^z}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}}}& \\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& \\frac{{ {{ \\gamma} ^x} ^y}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& \\frac{{ {{ \\gamma} ^x} ^z}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& \\frac{1}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& \\frac{1}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}} {{\\sqrt{f}}}}& -{\\frac{1}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}} {{\\sqrt{f}}}}}\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0\\\\ -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& {\\frac{1}{2}} {{ {{ \\gamma} ^x} ^y}}& { {{ \\gamma} ^y} ^y}& { {{ \\gamma} ^y} ^z}& \\frac{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}& \\frac{{-{{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& {\\frac{1}{2}} {{ {{ \\gamma} ^x} ^z}}& { {{ \\gamma} ^y} ^z}& { {{ \\gamma} ^z} ^z}& \\frac{{-{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}& \\frac{{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& \\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^y} ^z}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^y} ^z}}& \\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& -{\\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0\\\\ \\frac{1}{2}& 0& -{{\\frac{1}{2}} {{ {{ \\gamma} ^x} ^x}}}& -{{ {{ \\gamma} ^x} ^y}}& -{{ {{ \\gamma} ^x} ^z}}& \\frac{{-{{{2}} {{{{ {{ \\gamma} ^x} ^y}}^{2}}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}}{\\left({{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}{-{{{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}}}\\right)}& \\frac{{-{{{2}} {{{{ {{ \\gamma} ^x} ^z}}^{2}}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& -{\\frac{1}{2}}& -{\\frac{1}{2}}& 0& 0& 0& 0& 0& 0\\\\ 0& \\frac{1}{2}& 0& 0& 0& 0& 0& 0& -{{\\frac{1}{2}} {{ {{ \\gamma} ^x} ^x}}}& -{{ {{ \\gamma} ^x} ^y}}& -{{ {{ \\gamma} ^x} ^z}}& \\frac{{-{{{2}} {{{{ {{ \\gamma} ^x} ^y}}^{2}}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}}}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}}{\\left({{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}}}{-{{{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}}}}}\\right)}& \\frac{{-{{{2}} {{{{ {{ \\gamma} ^x} ^z}}^{2}}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}}}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& -{\\frac{1}{2}}& -{\\frac{1}{2}}& 0& 0& 0& 0\\end{array}\\right]$", outputtype="html", uid=94},
	{hidden=false, input="(LMat * RMat)() == Matrix.identity(n,n)", output="true", outputtype="html", uid=100},
	{hidden=false, input="eigenvalueMat = Matrix.diagonal(allEigenvalues:unpack())", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& {{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}} {{\\sqrt{f}}}& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& -{{{\\alpha}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}} {{\\sqrt{f}}}}\\end{array}\\right]$", outputtype="html", uid=99},
	{hidden=false, input="(RMat * eigenvalueMat * LMat)() == J", output="true", outputtype="html", uid=101},
	{hidden=false, input="-- ok before doing codegen, lets arrange our matrices so that the eigenvalues are in ascending order\n-- 1-17 is lambda=0\n-- 18-30 is alternating lambda=+-alpha sqrt(gamma^xx)\nperm = Matrix.permutation(\n\9table()\n\9:append{31}\n\9:append(range(6):mapi(function(i) return (i-1)*2+19 end))\n\9:append(range(1,17))\n\9:append(range(6):mapi(function(i) return (i-1)*2+18 end))\n\9:append{30}\n\9:unpack()\n):T()\n", output="$\\left[\\begin{array}{ccccccccccccccccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0\\\\ 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 1& 0\\end{array}\\right]$", outputtype="html", uid=116},
	{hidden=false, input="-- store just in case I screw up the permutation\norigRMat = RMat\norigLMat = LMat\norigEigenvalueMat = eigenvalueMat\n;", output="", outputtype="html", uid=118},
	{hidden=false, input="RMat = (RMat * perm:T())()\neigenvalueMat = (perm * eigenvalueMat * perm:T())()\nLMat = (perm * LMat)()\nprint((LMat * RMat)() == Matrix.identity(n,n))\nprint((RMat * eigenvalueMat * LMat)() == J)\n;", output="true<br>\ntrue<br>\n", outputtype="html", uid=117},
	{hidden=false, input="-- ok so we have the left and the right eigenvectors, and they combine with the eigenvalues to reproduce the flux jacobian\n-- now to codegen", output="", outputtype="html", uid=102},
	{hidden=false, input="for ij,gUij in gUs:iter() do\n\9gUij:nameForExporter('C', 'gamma_uu.'..sym(xs[ij[1]],xs[ij[2]]))\nend", output="", outputtype="html", uid=109},
	{hidden=false, input="export.C.numberType = 'real const';", output="", outputtype="html", uid=110},
	{hidden=false, input="sqrt_f = var'(\\\\sqrt{f})'\nsqrt_f:nameForExporter('C', 'sqrt_f')", output="$(\\sqrt{f})$", outputtype="html", uid=111},
	{hidden=false, input="-- 'X' is the input of the left-eigenvector code from state-space into wave-space / characteristic-space\n-- 'Y' is the output of the right-eigenvectors from wave-space back into state-space\n--[[\nX = Matrix:lambda({n,1}, function(i)\n\9local v = var('X_{'..(i-1)..'}')\n\9v:nameForExporter('C', 'inputU['..(i-1)..']')\n\9return v\nend)\n--]]\n-- but becaue we're using the rotated input , we have to use variables for the rotated input vars\n-- so no input->ptr[] ... instead use manual var names ... \n-- TODO the C names are already generated in the Z4.lua script, but they just aren't being saved in the SymMath exporter.\n-- [[\nlocal UCs = table()\nfor k,xk in ipairs(xs) do\n\9local v = var('a_{'..xk..'}')\n\9v:nameForExporter('C', 'a_l.'..xk)\n\9UCs:insert(v)\nend\nfor k,xk in ipairs(xs) do\n\9for ij,xij in ipairs(syms) do\n\9\9local v = var('d_{'..xk..xij..'}')\n\9\9v:nameForExporter('C', 'd_lll.'..xk..'.'..xij)\n\9\9UCs:insert(v)\n\9end\nend\nfor ij,xij in ipairs(syms) do\n\9local v = var('K_{'..xij..'}')\n\9v:nameForExporter('C', 'K_ll.'..xij)\n\9UCs:insert(v)\nend\nlocal v = var'\\\\Theta'\nv:nameForExporter('C', 'Theta')\nUCs:insert(v)\nfor k,xk in ipairs(xs) do\n\9local v = var('Z_{'..xk..'}')\n\9v:nameForExporter('C', 'Z_l.'..xk)\n\9UCs:insert(v)\nend\nassert(#UCs == n)\nX = Matrix(UCs):T()\nassert(#X == n)\n\nY = Matrix:lambda({n,1}, function(i)\n\9local v = var('Y_{'..(i-1)..'}')\n\9v:nameForExporter('C', '(inputU)->ptr['..(i-1)..']')\n\9return v\nend)\n\n--]]\n;", output="", outputtype="html", uid=114},
	{hidden=false, input="LTimesX = (LMat * X)()\n\9:replace(f, sqrt_f^2)\n\9:simplifyAddMulDiv()\nfor i=1,n do print(LTimesX[i][1]) end\n;", output="${{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{a_{x}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{a_{y}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{a_{z}}}}} + {{{-1}} {{(\\sqrt{f})}} \\cdot {{{K_{xx}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}} + {{{2}} {{(\\sqrt{f})}} \\cdot {{\\Theta}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{yy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{zz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{xy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{xz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{yz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}$<br>\n${{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xyy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{yyy}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zyy}}}}} + {{{-1}} {{{K_{yy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{yxy}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{yyz}}}}}$<br>\n${{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xyz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{yxz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{zxy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{zyy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{yzz}}}}} + {{{-1}} {{{K_{yz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}$<br>\n${{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xzz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{yzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zzz}}}}} + {{{-1}} {{{K_{zz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{zxz}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{zyz}}}}}$<br>\n${{{\\frac{1}{2}}} {{{a_{y}}}}} + {{{-1}} {{{Z_{y}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{yxx}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{yyy}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{yzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{xyy}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{yxy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{xyz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zxy}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{yyz}}}}} + {{{-1}} {{{K_{xy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}$<br>\n${{{\\frac{1}{2}}} {{{a_{z}}}}} + {{{-1}} {{{Z_{z}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{zxx}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{zyy}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{zzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{xyz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{yxz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{xzz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zxz}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{zyz}}}}} + {{{-1}} {{{K_{xz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}$<br>\n${{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{Z_{x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Z_{y}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Z_{z}}}}} + {{{-1}} {{\\Theta}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-1}} {{{d_{xyy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^y}}^{2}}}} + {{{-1}} {{{d_{xzz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^z}}^{2}}}} + {{{{d_{yxy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^y}}^{2}}}} + {{{{d_{zxz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^z}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{xyy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{yxy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{yxz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{zxy}}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{xzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{zxz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{yxz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zxy}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{yyz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{zyy}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{yzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{zyz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{yyz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{zyy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{yzz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{zyz}}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{xyz}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{xyz}}}}}$<br>\n${a_{y}}$<br>\n${a_{z}}$<br>\n${d_{yxx}}$<br>\n${d_{yxy}}$<br>\n${d_{yxz}}$<br>\n${d_{yyy}}$<br>\n${d_{yyz}}$<br>\n${d_{yzz}}$<br>\n${d_{zxx}}$<br>\n${d_{zxy}}$<br>\n${d_{zxz}}$<br>\n${d_{zyy}}$<br>\n${d_{zyz}}$<br>\n${d_{zzz}}$<br>\n${{{-1}} {{{a_{x}}}}} + {{{2}} {{{Z_{x}}}} \\cdot {{{(\\sqrt{f})}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xxx}}}} \\cdot {{{(\\sqrt{f})}^{2}}}} + {{{-1}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{xyy}}}} \\cdot {{{(\\sqrt{f})}^{2}}}} + {{{-1}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{xzz}}}} \\cdot {{{(\\sqrt{f})}^{2}}}} + {{{-2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{xyz}}}} \\cdot {{{(\\sqrt{f})}^{2}}}}$<br>\n${{Z_{y}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xxy}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{xyy}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{xyz}}}}}$<br>\n${{Z_{z}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xxz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{xyz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{xzz}}}}}$<br>\n${{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xyy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{yyy}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zyy}}}}} + {{{{K_{yy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{yxy}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{yyz}}}}}$<br>\n${{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xyz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{yxz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{zxy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{zyy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{yzz}}}}} + {{{{K_{yz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}$<br>\n${{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{xzz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{yzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zzz}}}}} + {{{{K_{zz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{zxz}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{zyz}}}}}$<br>\n${{{\\frac{1}{2}}} {{{a_{y}}}}} + {{{-1}} {{{Z_{y}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{yxx}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{yyy}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{yzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{xyy}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{yxy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{xyz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zxy}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{yyz}}}}} + {{{{K_{xy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}$<br>\n${{{\\frac{1}{2}}} {{{a_{z}}}}} + {{{-1}} {{{Z_{z}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{d_{zxx}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{zyy}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{zzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{xyz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{d_{yxz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{xzz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zxz}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{zyz}}}}} + {{{{K_{xz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}$<br>\n${{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{Z_{x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Z_{y}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Z_{z}}}}} + {{{\\Theta}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{-1}} {{{d_{xyy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^y}}^{2}}}} + {{{-1}} {{{d_{xzz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^z}}^{2}}}} + {{{{d_{yxy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^y}}^{2}}}} + {{{{d_{zxz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^z}}^{2}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{xyy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{yxy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{yxz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{zxy}}}}} + {{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{xzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{zxz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{yxz}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{zxy}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{yyz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{zyy}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{yzz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{d_{zyz}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{yyz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{d_{zyy}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{yzz}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{zyz}}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{d_{xyz}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{d_{xyz}}}}}$<br>\n${{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{a_{x}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{a_{y}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{a_{z}}}}} + {{{(\\sqrt{f})}} \\cdot {{{K_{xx}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}} + {{{-2}} {{(\\sqrt{f})}} \\cdot {{\\Theta}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{{ {{ \\gamma} ^y} ^y}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{yy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{{ {{ \\gamma} ^z} ^z}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{zz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{xy}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{xz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}} + {{{2}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{(\\sqrt{f})}} \\cdot {{{K_{yz}}}} \\cdot {{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}$<br>\n", outputtype="html", uid=112},
	{hidden=false, input="-- left eigenvector code:\n\nprint'<pre>'\nprint('\\t'..export.C:toCode{\n\9output = range(n):mapi(function(i)\n\9\9return {['(result)->ptr['..(i-1)..']'] = LTimesX[i][1]}\n\9end),\n\9assignOnly = true,\n}:gsub('\\n', '\\\\\\n\\t')..'\\\\')\nprint'</pre>'", output="<pre><br>\n\9real const tmp1 = 1. / 2.;\\\n\9real const tmp2 = 3. * tmp1;\\\n\9real const tmp3 = pow(gamma_uu.xx, tmp2);\\\n\9real const tmp4 = K_ll.xx * tmp3;\\\n\9real const tmp5 = sqrt_f * tmp4;\\\n\9real const tmp6 = pow(gamma_uu.xx, tmp1);\\\n\9real const tmp7 = Theta * tmp6;\\\n\9real const tmp8 = sqrt_f * tmp7;\\\n\9real const tmp9 = K_ll.yy * tmp6;\\\n\9real const tmp10 = sqrt_f * tmp9;\\\n\9real const tmp11 = gamma_uu.yy * tmp10;\\\n\9real const tmp12 = K_ll.zz * tmp6;\\\n\9real const tmp13 = sqrt_f * tmp12;\\\n\9real const tmp14 = gamma_uu.zz * tmp13;\\\n\9real const tmp15 = K_ll.xy * tmp6;\\\n\9real const tmp16 = sqrt_f * tmp15;\\\n\9real const tmp17 = gamma_uu.xy * tmp16;\\\n\9real const tmp18 = K_ll.xz * tmp6;\\\n\9real const tmp19 = sqrt_f * tmp18;\\\n\9real const tmp20 = gamma_uu.xz * tmp19;\\\n\9real const tmp21 = K_ll.yz * tmp6;\\\n\9real const tmp22 = sqrt_f * tmp21;\\\n\9real const tmp23 = gamma_uu.yz * tmp22;\\\n\9real const tmp24 = gamma_uu.xz * a_l.z;\\\n\9real const tmp25 = gamma_uu.xy * a_l.y;\\\n\9real const tmp26 = gamma_uu.xx * a_l.x;\\\n\9real const tmp27 = gamma_uu.xy * d_lll.y.yy;\\\n\9real const tmp28 = gamma_uu.xx * d_lll.y.xy;\\\n\9real const tmp29 = gamma_uu.xz * d_lll.y.yz;\\\n\9real const tmp30 = -2. * tmp28;\\\n\9real const tmp31 = -2. * tmp29;\\\n\9real const tmp32 = tmp30 + tmp31;\\\n\9real const tmp33 = gamma_uu.xz * d_lll.z.yy;\\\n\9real const tmp34 = -1. * tmp27;\\\n\9real const tmp35 = gamma_uu.xx * d_lll.x.yy;\\\n\9real const tmp36 = gamma_uu.xx * d_lll.y.xz;\\\n\9real const tmp37 = gamma_uu.xx * d_lll.z.xy;\\\n\9real const tmp38 = gamma_uu.xy * d_lll.z.yy;\\\n\9real const tmp39 = gamma_uu.xz * d_lll.y.zz;\\\n\9real const tmp40 = -1. * tmp39;\\\n\9real const tmp41 = -1. * tmp38;\\\n\9real const tmp42 = -1. * tmp37;\\\n\9real const tmp43 = -1. * tmp36;\\\n\9real const tmp44 = gamma_uu.xx * d_lll.x.yz;\\\n\9real const tmp45 = gamma_uu.xz * d_lll.z.zz;\\\n\9real const tmp46 = gamma_uu.xx * d_lll.z.xz;\\\n\9real const tmp47 = gamma_uu.xy * d_lll.z.yz;\\\n\9real const tmp48 = -2. * tmp46;\\\n\9real const tmp49 = -2. * tmp47;\\\n\9real const tmp50 = tmp48 + tmp49;\\\n\9real const tmp51 = -1. * tmp45;\\\n\9real const tmp52 = gamma_uu.xy * d_lll.y.zz;\\\n\9real const tmp53 = gamma_uu.xx * d_lll.x.zz;\\\n\9real const tmp54 = gamma_uu.xx * d_lll.y.xx;\\\n\9real const tmp55 = tmp1 * tmp54;\\\n\9real const tmp56 = gamma_uu.yy * d_lll.y.yy;\\\n\9real const tmp57 = gamma_uu.zz * d_lll.y.zz;\\\n\9real const tmp58 = gamma_uu.xy * d_lll.x.yy;\\\n\9real const tmp59 = gamma_uu.xz * d_lll.x.yz;\\\n\9real const tmp60 = gamma_uu.yz * d_lll.y.yz;\\\n\9real const tmp61 = gamma_uu.xz * d_lll.z.xy;\\\n\9real const tmp62 = -1. * tmp59;\\\n\9real const tmp63 = gamma_uu.xy * d_lll.y.xy;\\\n\9real const tmp64 = -1. * tmp58;\\\n\9real const tmp65 = tmp1 * tmp57;\\\n\9real const tmp66 = tmp1 * tmp56;\\\n\9real const tmp67 = -1. * tmp55;\\\n\9real const tmp68 = -1. * Z_l.y;\\\n\9real const tmp69 = a_l.y * tmp1;\\\n\9real const tmp70 = gamma_uu.xx * d_lll.z.xx;\\\n\9real const tmp71 = tmp1 * tmp70;\\\n\9real const tmp72 = gamma_uu.yy * d_lll.z.yy;\\\n\9real const tmp73 = gamma_uu.zz * d_lll.z.zz;\\\n\9real const tmp74 = gamma_uu.xy * d_lll.x.yz;\\\n\9real const tmp75 = gamma_uu.xz * d_lll.x.zz;\\\n\9real const tmp76 = gamma_uu.yz * d_lll.z.yz;\\\n\9real const tmp77 = gamma_uu.xz * d_lll.z.xz;\\\n\9real const tmp78 = -1. * tmp75;\\\n\9real const tmp79 = gamma_uu.xy * d_lll.y.xz;\\\n\9real const tmp80 = -1. * tmp74;\\\n\9real const tmp81 = tmp1 * tmp73;\\\n\9real const tmp82 = tmp1 * tmp72;\\\n\9real const tmp83 = -1. * tmp71;\\\n\9real const tmp84 = -1. * Z_l.z;\\\n\9real const tmp85 = a_l.z * tmp1;\\\n\9real const tmp86 = gamma_uu.xx * Z_l.x;\\\n\9real const tmp87 = gamma_uu.xy * Z_l.y;\\\n\9real const tmp88 = gamma_uu.xz * Z_l.z;\\\n\9real const tmp89 = gamma_uu.xy * gamma_uu.xy;\\\n\9real const tmp90 = d_lll.x.yy * tmp89;\\\n\9real const tmp91 = gamma_uu.xz * gamma_uu.xz;\\\n\9real const tmp92 = d_lll.x.zz * tmp91;\\\n\9real const tmp93 = gamma_uu.yy * d_lll.x.yy;\\\n\9real const tmp94 = gamma_uu.yy * d_lll.y.xy;\\\n\9real const tmp95 = gamma_uu.xx * tmp94;\\\n\9real const tmp96 = gamma_uu.yz * d_lll.y.xz;\\\n\9real const tmp97 = gamma_uu.xx * tmp96;\\\n\9real const tmp98 = gamma_uu.yz * d_lll.z.xy;\\\n\9real const tmp99 = gamma_uu.xx * tmp98;\\\n\9real const tmp100 = gamma_uu.zz * d_lll.x.zz;\\\n\9real const tmp101 = gamma_uu.zz * d_lll.z.xz;\\\n\9real const tmp102 = gamma_uu.xx * tmp101;\\\n\9real const tmp103 = gamma_uu.xz * d_lll.y.xz;\\\n\9real const tmp104 = gamma_uu.yz * d_lll.z.yy;\\\n\9real const tmp105 = gamma_uu.xy * tmp104;\\\n\9real const tmp106 = gamma_uu.zz * d_lll.z.yz;\\\n\9real const tmp107 = gamma_uu.xy * tmp106;\\\n\9real const tmp108 = gamma_uu.yy * d_lll.y.yz;\\\n\9real const tmp109 = gamma_uu.xz * tmp108;\\\n\9real const tmp110 = gamma_uu.yz * d_lll.y.zz;\\\n\9real const tmp111 = gamma_uu.xz * tmp110;\\\n\9real const tmp112 = gamma_uu.yz * d_lll.x.yz;\\\n\9real const tmp113 = gamma_uu.xx * tmp112;\\\n\9real const tmp114 = gamma_uu.xy * tmp59;\\\n\9real const tmp115 = 2. * tmp113;\\\n\9real const tmp116 = -2. * tmp114;\\\n\9real const tmp117 = gamma_uu.xz * tmp76;\\\n\9real const tmp118 = tmp115 + tmp116;\\\n\9real const tmp119 = -1. * tmp111;\\\n\9real const tmp120 = tmp117 + tmp118;\\\n\9real const tmp121 = gamma_uu.xz * tmp72;\\\n\9real const tmp122 = tmp119 + tmp120;\\\n\9real const tmp123 = -1. * tmp109;\\\n\9real const tmp124 = tmp121 + tmp122;\\\n\9real const tmp125 = -1. * tmp107;\\\n\9real const tmp126 = tmp123 + tmp124;\\\n\9real const tmp127 = gamma_uu.xy * tmp57;\\\n\9real const tmp128 = tmp125 + tmp126;\\\n\9real const tmp129 = -1. * tmp105;\\\n\9real const tmp130 = tmp127 + tmp128;\\\n\9real const tmp131 = gamma_uu.xy * tmp60;\\\n\9real const tmp132 = tmp129 + tmp130;\\\n\9real const tmp133 = gamma_uu.xy * tmp61;\\\n\9real const tmp134 = tmp131 + tmp132;\\\n\9real const tmp135 = gamma_uu.xy * tmp103;\\\n\9real const tmp136 = tmp133 + tmp134;\\\n\9real const tmp137 = -1. * tmp102;\\\n\9real const tmp138 = tmp135 + tmp136;\\\n\9real const tmp139 = gamma_uu.xx * tmp100;\\\n\9real const tmp140 = tmp137 + tmp138;\\\n\9real const tmp141 = -1. * tmp99;\\\n\9real const tmp142 = tmp139 + tmp140;\\\n\9real const tmp143 = -1. * tmp97;\\\n\9real const tmp144 = tmp141 + tmp142;\\\n\9real const tmp145 = -1. * tmp95;\\\n\9real const tmp146 = tmp143 + tmp144;\\\n\9real const tmp147 = gamma_uu.xx * tmp93;\\\n\9real const tmp148 = tmp145 + tmp146;\\\n\9real const tmp149 = d_lll.z.xz * tmp91;\\\n\9real const tmp150 = tmp147 + tmp148;\\\n\9real const tmp151 = d_lll.y.xy * tmp89;\\\n\9real const tmp152 = tmp149 + tmp150;\\\n\9real const tmp153 = -1. * tmp92;\\\n\9real const tmp154 = tmp151 + tmp152;\\\n\9real const tmp155 = -1. * tmp90;\\\n\9real const tmp156 = tmp153 + tmp154;\\\n\9real const tmp157 = tmp155 + tmp156;\\\n\9real const tmp158 = -1. * tmp88;\\\n\9real const tmp159 = -1. * tmp87;\\\n\9real const tmp160 = -1. * tmp86;\\\n\9real const tmp161 = sqrt_f * sqrt_f;\\\n\9(result)->ptr[0] = -1. * tmp5 + 2. * tmp8 + -1. * tmp11 + -1. * tmp14 + -2. * tmp17 + -2. * tmp23 + -2. * tmp20 + tmp24 + tmp25 + tmp26;\\\n\9(result)->ptr[1] = -1. * tmp9 + tmp32 + tmp33 + tmp34 + tmp35;\\\n\9(result)->ptr[2] = -1. * tmp21 + tmp40 + tmp41 + tmp42 + tmp43 + tmp44;\\\n\9(result)->ptr[3] = -1. * tmp12 + tmp50 + tmp51 + tmp52 + tmp53;\\\n\9(result)->ptr[4] = -1. * tmp15 + tmp60 + tmp61 + tmp62 + tmp63 + tmp64 + tmp65 + tmp66 + tmp67 + tmp68 + tmp69;\\\n\9(result)->ptr[5] = -1. * tmp18 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85;\\\n\9(result)->ptr[6] = -1. * tmp7 + tmp157 + tmp158 + tmp159 + tmp160;\\\n\9(result)->ptr[7] = a_l.y;\\\n\9(result)->ptr[8] = a_l.z;\\\n\9(result)->ptr[9] = d_lll.y.xx;\\\n\9(result)->ptr[10] = d_lll.y.xy;\\\n\9(result)->ptr[11] = d_lll.y.xz;\\\n\9(result)->ptr[12] = d_lll.y.yy;\\\n\9(result)->ptr[13] = d_lll.y.yz;\\\n\9(result)->ptr[14] = d_lll.y.zz;\\\n\9(result)->ptr[15] = d_lll.z.xx;\\\n\9(result)->ptr[16] = d_lll.z.xy;\\\n\9(result)->ptr[17] = d_lll.z.xz;\\\n\9(result)->ptr[18] = d_lll.z.yy;\\\n\9(result)->ptr[19] = d_lll.z.yz;\\\n\9(result)->ptr[20] = d_lll.z.zz;\\\n\9(result)->ptr[21] = -1. * a_l.x + 2. * Z_l.x * tmp161 + gamma_uu.xx * d_lll.x.xx * tmp161 + -1. * gamma_uu.yy * d_lll.x.yy * tmp161 + -2. * gamma_uu.yz * d_lll.x.yz * tmp161 + -1. * gamma_uu.zz * d_lll.x.zz * tmp161;\\\n\9(result)->ptr[22] = Z_l.y + gamma_uu.xx * d_lll.x.xy + tmp58 + tmp59;\\\n\9(result)->ptr[23] = Z_l.z + gamma_uu.xx * d_lll.x.xz + tmp74 + tmp75;\\\n\9(result)->ptr[24] = tmp9 + tmp32 + tmp33 + tmp34 + tmp35;\\\n\9(result)->ptr[25] = tmp21 + tmp40 + tmp41 + tmp42 + tmp43 + tmp44;\\\n\9(result)->ptr[26] = tmp12 + tmp50 + tmp51 + tmp52 + tmp53;\\\n\9(result)->ptr[27] = tmp15 + tmp60 + tmp61 + tmp62 + tmp63 + tmp64 + tmp65 + tmp66 + tmp67 + tmp68 + tmp69;\\\n\9(result)->ptr[28] = tmp18 + tmp76 + tmp77 + tmp78 + tmp79 + tmp80 + tmp81 + tmp82 + tmp83 + tmp84 + tmp85;\\\n\9(result)->ptr[29] = tmp7 + tmp157 + tmp158 + tmp159 + tmp160;\\\n\9(result)->ptr[30] = -2. * tmp8 + 2. * tmp17 + 2. * tmp23 + 2. * tmp20 + tmp5 + tmp11 + tmp14 + tmp24 + tmp25 + tmp26;\\<br>\n</pre><br>\n", outputtype="html", uid=113},
	{hidden=false, input="RTimesX = (RMat * Y)()\n\9:replace(f, sqrt_f^2)\n\9:simplifyAddMulDiv()\nfor i=1,n do print(RTimesX[i][1]) end\n;", output="${{{\\frac{1}{2}}} {{{Y_{0}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{Y_{30}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{7}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{8}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${Y_{7}}$<br>\n${Y_{8}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{0}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}} {{\\frac{1}{{(\\sqrt{f})}^{2}}}}} + {{{\\frac{1}{2}}} {{{Y_{30}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}} {{\\frac{1}{{(\\sqrt{f})}^{2}}}}} + {{{{Y_{21}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}} {{\\frac{1}{{(\\sqrt{f})}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{7}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}} {{\\frac{1}{{(\\sqrt{f})}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{8}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}} {{\\frac{1}{{(\\sqrt{f})}^{2}}}}} + {{{{Y_{29}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{{Y_{6}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{1}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{24}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{26}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{3}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{27}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{4}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{7}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{28}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{5}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{8}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{25}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{2}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{9}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{15}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{27}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{Y_{4}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{7}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{Y_{22}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{Y_{9}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{12}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{14}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{10}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{16}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{13}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{28}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{Y_{5}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{8}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{Y_{23}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{Y_{15}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{18}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{20}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{11}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{17}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{19}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{1}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{Y_{24}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{12}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{18}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{2}} {{{Y_{10}}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{13}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{25}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{Y_{2}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{Y_{11}}} + {{Y_{16}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{18}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{14}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{26}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{Y_{3}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{14}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{20}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{2}} {{{Y_{17}}}}} + {{{2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{19}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${Y_{9}}$<br>\n${Y_{10}}$<br>\n${Y_{11}}$<br>\n${Y_{12}}$<br>\n${Y_{13}}$<br>\n${Y_{14}}$<br>\n${Y_{15}}$<br>\n${Y_{16}}$<br>\n${Y_{17}}$<br>\n${Y_{18}}$<br>\n${Y_{19}}$<br>\n${Y_{20}}$<br>\n${{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{0}}}} \\cdot {{\\frac{1}{(\\sqrt{f})}}} {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{\\frac{1}{2}}} {{{Y_{30}}}} \\cdot {{\\frac{1}{(\\sqrt{f})}}} {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{{Y_{29}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{-1}} {{{Y_{6}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{1}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{24}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{26}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{3}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{27}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{4}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{28}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{5}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{-1}} {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{25}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{2}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{{{3}} \\cdot {{\\frac{1}{2}}}}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{27}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{4}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{28}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{5}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}}$<br>\n${{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{1}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}} + {{{\\frac{1}{2}}} {{{Y_{24}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{25}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{2}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{26}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{3}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}}$<br>\n${{{\\frac{1}{2}}} {{{Y_{29}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{6}}}} \\cdot {{\\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{\\frac{1}{2}}}}}}$<br>\n${{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{29}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{6}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{27}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{4}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{7}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{28}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{5}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{8}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{1}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{24}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{26}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{3}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{25}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{2}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{9}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{15}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{12}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{14}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{18}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{20}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{10}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{11}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{16}}}}} + {{{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{17}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{18}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{19}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{13}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{14}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{27}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{4}}}}} + {{{\\frac{1}{2}}} {{{Y_{7}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{1}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{24}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{25}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{2}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{Y_{9}}}}} + {{{-1}} {{{Y_{12}}}} \\cdot {{{{ {{ \\gamma} ^x} ^y}}^{2}}} {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{Y_{14}}}} \\cdot {{{{ {{ \\gamma} ^x} ^z}}^{2}}} {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{12}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{14}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{10}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{11}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{13}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{13}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n${{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{28}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{Y_{5}}}}} + {{{\\frac{1}{2}}} {{{Y_{8}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{25}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{2}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{26}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{3}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} \\cdot {{\\frac{1}{2}}} {{{ {{ \\gamma} ^x} ^x}}} \\cdot {{{Y_{15}}}}} + {{{-1}} {{{Y_{18}}}} \\cdot {{{{ {{ \\gamma} ^x} ^y}}^{2}}} {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{-1}} {{{Y_{20}}}} \\cdot {{{{ {{ \\gamma} ^x} ^z}}^{2}}} {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^y} ^y}}} \\cdot {{{Y_{18}}}}} + {{{\\frac{1}{2}}} {{{ {{ \\gamma} ^z} ^z}}} \\cdot {{{Y_{20}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{Y_{16}}}}} + {{{-1}} {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{17}}}}} + {{{{ {{ \\gamma} ^y} ^z}}} \\cdot {{{Y_{19}}}}} + {{{-2}} {{{ {{ \\gamma} ^x} ^y}}} \\cdot {{{ {{ \\gamma} ^x} ^z}}} \\cdot {{{Y_{19}}}} \\cdot {{\\frac{1}{{ {{ \\gamma} ^x} ^x}}}}}$<br>\n", outputtype="html", uid=105},
	{hidden=false, input="rightResultVars = Matrix:lambda({n,1}, function(i) return var('(result)->ptr['..7+(i-1)..']') end)\n--print(rightResultVars:T())\n;", output="", outputtype="html", uid=129},
	{hidden=false, input="-- right eigenvector code:\n\nprint'<pre>'\nprint('\\t'..export.C:toCode{\n\9output = range(n):mapi(function(i)\n\9\9-- why 7+ ?  to skip past alpha, gamma_ij\n\9\9return {[rightResultVars[i][1].name] = RTimesX[i][1]}\n\9end),\n\9assignOnly = true,\n}:gsub('\\n', '\\\\\\n\\t')..'\\\\')\nprint'</pre>'", output="<pre><br>\n\9real const tmp1 = 1. / gamma_uu.xx;\\\n\9real const tmp2 = 1. / 2.;\\\n\9real const tmp3 = (inputU)->ptr[7] * tmp1;\\\n\9real const tmp4 = gamma_uu.xy * tmp3;\\\n\9real const tmp5 = (inputU)->ptr[8] * tmp1;\\\n\9real const tmp6 = gamma_uu.xz * tmp5;\\\n\9real const tmp7 = gamma_uu.xx * gamma_uu.xx;\\\n\9real const tmp8 = sqrt_f * sqrt_f;\\\n\9real const tmp9 = 1. / tmp7;\\\n\9real const tmp10 = 1. / tmp8;\\\n\9real const tmp11 = tmp9 * tmp10;\\\n\9real const tmp12 = (inputU)->ptr[27] * tmp1;\\\n\9real const tmp13 = (inputU)->ptr[4] * tmp1;\\\n\9real const tmp14 = (inputU)->ptr[12] * tmp1;\\\n\9real const tmp15 = gamma_uu.yy * tmp14;\\\n\9real const tmp16 = (inputU)->ptr[14] * tmp1;\\\n\9real const tmp17 = gamma_uu.zz * tmp16;\\\n\9real const tmp18 = (inputU)->ptr[13] * tmp1;\\\n\9real const tmp19 = (inputU)->ptr[28] * tmp1;\\\n\9real const tmp20 = (inputU)->ptr[5] * tmp1;\\\n\9real const tmp21 = (inputU)->ptr[18] * tmp1;\\\n\9real const tmp22 = gamma_uu.yy * tmp21;\\\n\9real const tmp23 = (inputU)->ptr[20] * tmp1;\\\n\9real const tmp24 = gamma_uu.zz * tmp23;\\\n\9real const tmp25 = (inputU)->ptr[19] * tmp1;\\\n\9real const tmp26 = (inputU)->ptr[1] * tmp1;\\\n\9real const tmp27 = (inputU)->ptr[24] * tmp1;\\\n\9real const tmp28 = gamma_uu.xz * tmp18;\\\n\9real const tmp29 = (inputU)->ptr[25] * tmp1;\\\n\9real const tmp30 = (inputU)->ptr[2] * tmp1;\\\n\9real const tmp31 = (inputU)->ptr[26] * tmp1;\\\n\9real const tmp32 = (inputU)->ptr[3] * tmp1;\\\n\9real const tmp33 = 3. * tmp2;\\\n\9real const tmp34 = pow(gamma_uu.xx, tmp33);\\\n\9real const tmp35 = 1. / sqrt_f;\\\n\9real const tmp36 = 1. / tmp34;\\\n\9real const tmp37 = tmp35 * tmp36;\\\n\9real const tmp38 = pow(gamma_uu.xx, tmp2);\\\n\9real const tmp39 = 1. / tmp38;\\\n\9real const tmp40 = gamma_uu.xy * gamma_uu.xy;\\\n\9real const tmp41 = tmp1 * tmp40;\\\n\9real const tmp42 = gamma_uu.xz * gamma_uu.xz;\\\n\9real const tmp43 = tmp1 * tmp42;\\\n\9(result)->ptr[7] = (inputU)->ptr[0] * tmp1 * tmp2 + (inputU)->ptr[30] * tmp1 * tmp2 + -1. * tmp6 + -1. * tmp4;\\\n\9(result)->ptr[8] = (inputU)->ptr[7];\\\n\9(result)->ptr[9] = (inputU)->ptr[8];\\\n\9(result)->ptr[10] = (inputU)->ptr[0] * tmp2 * tmp11 + (inputU)->ptr[30] * tmp2 * tmp11 + (inputU)->ptr[21] * tmp1 * tmp10 + -1. * gamma_uu.xy * (inputU)->ptr[7] * tmp11 + -1. * gamma_uu.xz * (inputU)->ptr[8] * tmp11 + (inputU)->ptr[29] * tmp9 + (inputU)->ptr[6] * tmp9 + -1. * gamma_uu.yy * (inputU)->ptr[1] * tmp2 * tmp9 + -1. * gamma_uu.yy * (inputU)->ptr[24] * tmp2 * tmp9 + -1. * gamma_uu.zz * (inputU)->ptr[26] * tmp2 * tmp9 + -1. * gamma_uu.zz * (inputU)->ptr[3] * tmp2 * tmp9 + -1. * gamma_uu.xy * (inputU)->ptr[27] * tmp9 + -1. * gamma_uu.xy * (inputU)->ptr[4] * tmp9 + gamma_uu.xy * (inputU)->ptr[7] * tmp9 + -1. * gamma_uu.xz * (inputU)->ptr[28] * tmp9 + -1. * gamma_uu.xz * (inputU)->ptr[5] * tmp9 + gamma_uu.xz * (inputU)->ptr[8] * tmp9 + -1. * gamma_uu.yz * (inputU)->ptr[25] * tmp9 + -1. * gamma_uu.yz * (inputU)->ptr[2] * tmp9 + -1. * gamma_uu.xz * (inputU)->ptr[15] * tmp1 + -1. * gamma_uu.xy * (inputU)->ptr[9] * tmp1;\\\n\9(result)->ptr[11] = tmp2 * tmp12 + tmp2 * tmp13 + -1. * tmp2 * tmp3 + (inputU)->ptr[22] * tmp1 + (inputU)->ptr[9] * tmp2 + -1. * tmp2 * tmp15 + -1. * tmp2 * tmp17 + -1. * gamma_uu.xy * (inputU)->ptr[10] * tmp1 + -1. * gamma_uu.yz * tmp18 + -1. * gamma_uu.xz * (inputU)->ptr[16] * tmp1;\\\n\9(result)->ptr[12] = tmp2 * tmp19 + tmp2 * tmp20 + -1. * tmp2 * tmp5 + (inputU)->ptr[23] * tmp1 + (inputU)->ptr[15] * tmp2 + -1. * tmp2 * tmp22 + -1. * tmp2 * tmp24 + -1. * gamma_uu.xy * (inputU)->ptr[11] * tmp1 + -1. * gamma_uu.yz * tmp25 + -1. * gamma_uu.xz * (inputU)->ptr[17] * tmp1;\\\n\9(result)->ptr[13] = tmp2 * tmp26 + tmp2 * tmp27 + gamma_uu.xy * tmp14 + -1. * gamma_uu.xz * tmp21 + 2. * tmp28 + 2. * (inputU)->ptr[10];\\\n\9(result)->ptr[14] = tmp2 * tmp29 + (inputU)->ptr[11] + tmp2 * tmp30 + (inputU)->ptr[16] + gamma_uu.xz * tmp16 + gamma_uu.xy * tmp21;\\\n\9(result)->ptr[15] = tmp2 * tmp31 + tmp2 * tmp32 + -1. * gamma_uu.xy * tmp16 + gamma_uu.xz * tmp23 + 2. * gamma_uu.xy * tmp25 + 2. * (inputU)->ptr[17];\\\n\9(result)->ptr[16] = (inputU)->ptr[9];\\\n\9(result)->ptr[17] = (inputU)->ptr[10];\\\n\9(result)->ptr[18] = (inputU)->ptr[11];\\\n\9(result)->ptr[19] = (inputU)->ptr[12];\\\n\9(result)->ptr[20] = (inputU)->ptr[13];\\\n\9(result)->ptr[21] = (inputU)->ptr[14];\\\n\9(result)->ptr[22] = (inputU)->ptr[15];\\\n\9(result)->ptr[23] = (inputU)->ptr[16];\\\n\9(result)->ptr[24] = (inputU)->ptr[17];\\\n\9(result)->ptr[25] = (inputU)->ptr[18];\\\n\9(result)->ptr[26] = (inputU)->ptr[19];\\\n\9(result)->ptr[27] = (inputU)->ptr[20];\\\n\9(result)->ptr[28] = -1. * (inputU)->ptr[0] * tmp2 * tmp37 + (inputU)->ptr[30] * tmp2 * tmp37 + (inputU)->ptr[29] * tmp36 + -1. * (inputU)->ptr[6] * tmp36 + gamma_uu.yy * (inputU)->ptr[1] * tmp2 * tmp36 + -1. * gamma_uu.yy * (inputU)->ptr[24] * tmp2 * tmp36 + -1. * gamma_uu.zz * (inputU)->ptr[26] * tmp2 * tmp36 + gamma_uu.zz * (inputU)->ptr[3] * tmp2 * tmp36 + -1. * gamma_uu.xy * (inputU)->ptr[27] * tmp36 + gamma_uu.xy * (inputU)->ptr[4] * tmp36 + -1. * gamma_uu.xz * (inputU)->ptr[28] * tmp36 + gamma_uu.xz * (inputU)->ptr[5] * tmp36 + gamma_uu.yz * (inputU)->ptr[2] * tmp36 + -1. * gamma_uu.yz * (inputU)->ptr[25] * tmp36;\\\n\9(result)->ptr[29] = -1. * (inputU)->ptr[4] * tmp2 * tmp39 + (inputU)->ptr[27] * tmp2 * tmp39;\\\n\9(result)->ptr[30] = -1. * (inputU)->ptr[5] * tmp2 * tmp39 + (inputU)->ptr[28] * tmp2 * tmp39;\\\n\9(result)->ptr[31] = (inputU)->ptr[24] * tmp2 * tmp39 + -1. * (inputU)->ptr[1] * tmp2 * tmp39;\\\n\9(result)->ptr[32] = -1. * (inputU)->ptr[2] * tmp2 * tmp39 + (inputU)->ptr[25] * tmp2 * tmp39;\\\n\9(result)->ptr[33] = -1. * (inputU)->ptr[3] * tmp2 * tmp39 + (inputU)->ptr[26] * tmp2 * tmp39;\\\n\9(result)->ptr[34] = -1. * (inputU)->ptr[6] * tmp2 * tmp39 + (inputU)->ptr[29] * tmp2 * tmp39;\\\n\9(result)->ptr[35] = -1. * (inputU)->ptr[29] * tmp1 * tmp2 + -1. * (inputU)->ptr[6] * tmp1 * tmp2 + gamma_uu.xy * tmp2 * tmp12 + gamma_uu.xy * tmp2 * tmp13 + -1. * tmp2 * tmp4 + gamma_uu.xz * tmp2 * tmp19 + gamma_uu.xz * tmp2 * tmp20 + -1. * tmp2 * tmp6 + gamma_uu.yy * tmp2 * tmp26 + gamma_uu.yy * tmp2 * tmp27 + gamma_uu.zz * tmp2 * tmp31 + gamma_uu.zz * tmp2 * tmp32 + gamma_uu.yz * tmp29 + gamma_uu.yz * tmp30 + gamma_uu.xy * (inputU)->ptr[9] * tmp2 + gamma_uu.xz * (inputU)->ptr[15] * tmp2 + gamma_uu.xy * tmp2 * tmp15 + -1. * gamma_uu.xy * tmp2 * tmp17 + -1. * gamma_uu.xz * tmp2 * tmp22 + gamma_uu.xz * tmp2 * tmp24 + gamma_uu.yy * (inputU)->ptr[10] + gamma_uu.yz * (inputU)->ptr[11] + gamma_uu.yz * (inputU)->ptr[16] + gamma_uu.zz * (inputU)->ptr[17] + gamma_uu.xy * gamma_uu.yz * tmp21 + gamma_uu.xy * gamma_uu.zz * tmp25 + gamma_uu.xz * gamma_uu.yz * tmp16 + gamma_uu.xz * gamma_uu.yy * tmp18;\\\n\9(result)->ptr[36] = -1. * (inputU)->ptr[27] * tmp2 + -1. * (inputU)->ptr[4] * tmp2 + (inputU)->ptr[7] * tmp2 + -1. * gamma_uu.xy * tmp2 * tmp26 + -1. * gamma_uu.xy * tmp2 * tmp27 + -1. * gamma_uu.xz * tmp2 * tmp29 + -1. * gamma_uu.xz * tmp2 * tmp30 + -1. * gamma_uu.xx * (inputU)->ptr[9] * tmp2 + -1. * (inputU)->ptr[12] * tmp41 + -1. * (inputU)->ptr[14] * tmp43 + gamma_uu.yy * (inputU)->ptr[12] * tmp2 + gamma_uu.zz * (inputU)->ptr[14] * tmp2 + -1. * gamma_uu.xy * (inputU)->ptr[10] + -1. * gamma_uu.xz * (inputU)->ptr[11] + -2. * gamma_uu.xy * tmp28 + gamma_uu.yz * (inputU)->ptr[13];\\\n\9(result)->ptr[37] = -1. * (inputU)->ptr[28] * tmp2 + -1. * (inputU)->ptr[5] * tmp2 + (inputU)->ptr[8] * tmp2 + -1. * gamma_uu.xy * tmp2 * tmp29 + -1. * gamma_uu.xy * tmp2 * tmp30 + -1. * gamma_uu.xz * tmp2 * tmp31 + -1. * gamma_uu.xz * tmp2 * tmp32 + -1. * gamma_uu.xx * (inputU)->ptr[15] * tmp2 + -1. * (inputU)->ptr[18] * tmp41 + -1. * (inputU)->ptr[20] * tmp43 + gamma_uu.yy * (inputU)->ptr[18] * tmp2 + gamma_uu.zz * (inputU)->ptr[20] * tmp2 + -1. * gamma_uu.xy * (inputU)->ptr[16] + -1. * gamma_uu.xz * (inputU)->ptr[17] + -2. * gamma_uu.xy * gamma_uu.xz * tmp25 + gamma_uu.yz * (inputU)->ptr[19];\\<br>\n</pre><br>\n", outputtype="html", uid=104},
	{hidden=false, input="print'<pre>'\nfor i=1,n do\n\9local l = eigenvalueMat[i][i]\9-- use eigenvalueMat instead of allEigenvalues because its been permuted to match RMat and LMat\n\9io.write('\\t\\t'..(i>1 and 'else' or '')..'if args.waveIndex == '..(i-1)..' then')\n\9--[[\n\9print('\\n\\t\\t\\treturn '..export.C:toCode{output={l}})\n\9--]]\n\9-- [[\n\9if Constant.isValue( (l - (-alpha*sqrt(f*gammaUxx)))(), 0) then\n\9\9io.write(\" return '-'..betaUi..' - eig_lambdaGauge'\\n\")\n\9elseif Constant.isValue( (l - (-alpha*sqrt(gammaUxx)))(), 0) then\n\9\9io.write(\" return '-'..betaUi..' - eig_lambdaLight'\\n\")\n\9elseif Constant.isValue( l, 0) then\n\9\9io.write(\" return '-'..betaUi\\n\")\n\9elseif Constant.isValue( (l - (alpha*sqrt(gammaUxx)))(), 0) then\n\9\9io.write(\" return '-'..betaUi..' + eig_lambdaLight'\\n\")\n\9elseif Constant.isValue( (l - (alpha*sqrt(f*gammaUxx)))(), 0) then\n\9\9io.write(\" return '-'..betaUi..' + eig_lambdaGauge'\\n\")\n\9else\n\9\9io.write(\" error('idk how to handle '\"..export.C(l)..\")\\n\")\n\9end\n\9--]]\nend\nprint('\\t\\tend')\nprint'</pre>'\n;", output="<pre><br>\n\9\9if args.waveIndex == 0 then error('idk how to handle '-\\alpha * sqrt(gamma_uu.xx) * sqrt(f))\n\9\9elseif args.waveIndex == 1 then error('idk how to handle '-\\alpha * sqrt( {{ \\gamma} ^x} ^x))\n\9\9elseif args.waveIndex == 2 then error('idk how to handle '-\\alpha * sqrt( {{ \\gamma} ^x} ^x))\n\9\9elseif args.waveIndex == 3 then error('idk how to handle '-\\alpha * sqrt( {{ \\gamma} ^x} ^x))\n\9\9elseif args.waveIndex == 4 then error('idk how to handle '-\\alpha * sqrt(gamma_uu.xx))\n\9\9elseif args.waveIndex == 5 then error('idk how to handle '-\\alpha * sqrt(gamma_uu.xx))\n\9\9elseif args.waveIndex == 6 then error('idk how to handle '-\\alpha * sqrt( {{ \\gamma} ^x} ^x))\n\9\9elseif args.waveIndex == 7 then return '-'..betaUi\n\9\9elseif args.waveIndex == 8 then return '-'..betaUi\n\9\9elseif args.waveIndex == 9 then return '-'..betaUi\n\9\9elseif args.waveIndex == 10 then return '-'..betaUi\n\9\9elseif args.waveIndex == 11 then return '-'..betaUi\n\9\9elseif args.waveIndex == 12 then return '-'..betaUi\n\9\9elseif args.waveIndex == 13 then return '-'..betaUi\n\9\9elseif args.waveIndex == 14 then return '-'..betaUi\n\9\9elseif args.waveIndex == 15 then return '-'..betaUi\n\9\9elseif args.waveIndex == 16 then return '-'..betaUi\n\9\9elseif args.waveIndex == 17 then return '-'..betaUi\n\9\9elseif args.waveIndex == 18 then return '-'..betaUi\n\9\9elseif args.waveIndex == 19 then return '-'..betaUi\n\9\9elseif args.waveIndex == 20 then return '-'..betaUi\n\9\9elseif args.waveIndex == 21 then return '-'..betaUi\n\9\9elseif args.waveIndex == 22 then return '-'..betaUi\n\9\9elseif args.waveIndex == 23 then return '-'..betaUi\n\9\9elseif args.waveIndex == 24 then error('idk how to handle '\\alpha * sqrt( {{ \\gamma} ^x} ^x))\n\9\9elseif args.waveIndex == 25 then error('idk how to handle '\\alpha * sqrt( {{ \\gamma} ^x} ^x))\n\9\9elseif args.waveIndex == 26 then error('idk how to handle '\\alpha * sqrt( {{ \\gamma} ^x} ^x))\n\9\9elseif args.waveIndex == 27 then error('idk how to handle '\\alpha * sqrt(gamma_uu.xx))\n\9\9elseif args.waveIndex == 28 then error('idk how to handle '\\alpha * sqrt(gamma_uu.xx))\n\9\9elseif args.waveIndex == 29 then error('idk how to handle '\\alpha * sqrt( {{ \\gamma} ^x} ^x))\n\9\9elseif args.waveIndex == 30 then error('idk how to handle '\\alpha * sqrt(gamma_uu.xx) * sqrt(f))\n\9\9end<br>\n</pre><br>\n", outputtype="html", uid=115},
	{hidden=false, input="-- now do the same thing after removing the d/dt = 0 rows\nlocal removeRows = table()\nlocal removeCols = table()\nnoZeroLMat = origLMat:clone()\nnoZeroEigenvalueMat = origEigenvalueMat:clone()\nnoZeroX = X:clone()\nnoZeroRightResultVars = rightResultVars:clone()\nfor i=1,n do\n\9local onesCols = table()\n\9local nonZeroesNonOnes = 0\n\9for j=1,n do\n\9\9if Constant.isValue(noZeroLMat[i][j], 1) then\n\9\9\9onesCols:insert(j)\n\9\9elseif not Constant.isValue(noZeroLMat[i][j], 0) then\n\9\9\9nonZeroesNonOnes = nonZeroesNonOnes + 1\n\9\9end\n\9end\n\9if #onesCols == 1 and nonZeroesNonOnes == 0 then\n\9\9removeRows:insert(i)\n\9\9removeCols:insert(onesCols[1])\n\9end\nend\nfor _,j in ipairs(removeCols:sort():reverse()) do\n\9for i=1,#noZeroLMat do\n\9\9table.remove(noZeroLMat[i], j)\n\9end\n\9table.remove(noZeroX, j)\n\9table.remove(noZeroRightResultVars, j)\nend\nfor _,i in ipairs(removeRows:sort():reverse()) do\n\9-- for the 'removeRows', remove from the eigenvalue mat's cols and rows\n\9for j=1,#noZeroEigenvalueMat do\n\9\9table.remove(noZeroEigenvalueMat[j], i)\n\9end\n\9table.remove(noZeroEigenvalueMat, i)\n\9table.remove(noZeroLMat, i)\nend\nnoZeroY = Matrix(range(1,#noZeroX):mapi(function(i) return Y[i][1] end)):T()\n;", output="", outputtype="html", uid=119},
	{hidden=false, input="noZeroX:T()", output="$\\left[\\begin{array}{ccccccccccccccccc} {a_{x}}& {d_{xxx}}& {d_{xxy}}& {d_{xxz}}& {d_{xyy}}& {d_{xyz}}& {d_{xzz}}& {K_{xx}}& {K_{xy}}& {K_{xz}}& {K_{yy}}& {K_{yz}}& {K_{zz}}& \\Theta& {Z_{x}}& {Z_{y}}& {Z_{z}}\\end{array}\\right]$", outputtype="html", uid=126},
	{hidden=false, input="noZeroY:T()", output="$\\left[\\begin{array}{ccccccccccccccccc} {Y_{0}}& {Y_{1}}& {Y_{2}}& {Y_{3}}& {Y_{4}}& {Y_{5}}& {Y_{6}}& {Y_{7}}& {Y_{8}}& {Y_{9}}& {Y_{10}}& {Y_{11}}& {Y_{12}}& {Y_{13}}& {Y_{14}}& {Y_{15}}& {Y_{16}}\\end{array}\\right]$", outputtype="html", uid=127},
	{hidden=false, input="noZeroRightResultVars:T()", output="$\\left[\\begin{array}{ccccccccccccccccc} (result)->ptr[7]& (result)->ptr[10]& (result)->ptr[11]& (result)->ptr[12]& (result)->ptr[13]& (result)->ptr[14]& (result)->ptr[15]& (result)->ptr[28]& (result)->ptr[29]& (result)->ptr[30]& (result)->ptr[31]& (result)->ptr[32]& (result)->ptr[33]& (result)->ptr[34]& (result)->ptr[35]& (result)->ptr[36]& (result)->ptr[37]\\end{array}\\right]$", outputtype="html", uid=130},
	{hidden=false, input="noZeroRMat = noZeroLMat:inv()", output="$\\left[\\begin{array}{ccccccccccccccccc} 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}\\\\ \\frac{1}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{f}}}& 0& 0& -{\\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}}& -{\\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}}& -{\\frac{{ {{ \\gamma} ^y} ^z}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^y} ^z}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}}& -{\\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{ {{ \\gamma} ^x} ^x}}^{2}}}& \\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}& \\frac{1}{{{ {{ \\gamma} ^x} ^x}}^{2}}& \\frac{1}{{{2}} {{f}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}& \\frac{1}{{{2}} {{f}} {{{{ {{ \\gamma} ^x} ^x}}^{2}}}}\\\\ 0& \\frac{1}{{ {{ \\gamma} ^x} ^x}}& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0\\\\ 0& 0& \\frac{1}{{ {{ \\gamma} ^x} ^x}}& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0\\\\ 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& -{\\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}}}& \\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}}& -{\\frac{{ {{ \\gamma} ^y} ^z}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& \\frac{{ {{ \\gamma} ^y} ^z}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}}}& \\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& \\frac{{ {{ \\gamma} ^x} ^y}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& \\frac{{ {{ \\gamma} ^x} ^z}}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& \\frac{1}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& \\frac{1}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}} {{\\sqrt{f}}}}& -{\\frac{1}{{{2}} {{{{{ {{ \\gamma} ^x} ^x}}} \\cdot {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}} {{\\sqrt{f}}}}}\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0\\\\ 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& 0& \\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{\\sqrt{{ {{ \\gamma} ^x} ^x}}}}}}& 0& 0\\\\ 0& 0& 0& \\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^y} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^y} ^z}}& {\\frac{1}{{ {{ \\gamma} ^x} ^x}}} {{ {{ \\gamma} ^y} ^z}}& \\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^z} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& \\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}& -{\\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{1}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0\\\\ 0& 0& 0& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& -{\\frac{1}{2}}& -{\\frac{1}{2}}& 0& 0& 0& 0& 0& 0\\\\ 0& 0& 0& 0& 0& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^y}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& -{\\frac{{ {{ \\gamma} ^x} ^z}}{{{2}} {{{ {{ \\gamma} ^x} ^x}}}}}& 0& 0& -{\\frac{1}{2}}& -{\\frac{1}{2}}& 0& 0& 0& 0\\end{array}\\right]$", outputtype="html", uid=121},
	{hidden=false, input="-- 1-3 is lambda=0\n-- 4-16 is alternating lambda=+-alpha sqrt(gamma^xx)\npermIndexes = table()\n\9:append{17}\n\9:append(range(6):mapi(function(i) return (i-1)*2+5 end))\n\9:append(range(1,3))\n\9:append(range(6):mapi(function(i) return (i-1)*2+4 end))\n\9:append{16}\nperm = Matrix.permutation(permIndexes:unpack()):T()\n;", output="", outputtype="html", uid=123},
	{hidden=false, input="-- store just in case I screw up the permutation\norigNoZeroRMat = noZeroRMat\norigNoZeroLMat = noZeroLMat\norigNoZeroEigenvalueMat = noZeroEigenvalueMat\n;", output="", outputtype="html", uid=122},
	{hidden=false, input="-- now permute them into sorted-eigenvalue order ...\nnoZeroRMat = (noZeroRMat * perm:T())()\neigenvalueMat = (perm * noZeroEigenvalueMat * perm:T())()\nnoZeroLMat = (perm * noZeroLMat)()\n\n-- TODO verify that the permuted left and right eigenvectors reconstruct the flux with rows/variables removed?\n--print((LMat * RMat)() == Matrix.identity(n,n))\n--print((RMat * eigenvalueMat * LMat)() == J)\n;", output="", outputtype="html", uid=120},
	{hidden=false, input="-- TODO HERE do the codegen *again* for noZeroRows ... just because?\n-- TODO TODO prove that the noZeroRows flux transform the same ... is it?  why do the MHD folks do 7-var instead of 8-var?\n-- if it's the same then why am I even doing the 31-variable non-no-zero-rows transform?\n\nnoZeroLTimesX = (noZeroLMat * noZeroX)()\n\9:replace(f, sqrt_f^2)\n\9:simplifyAddMulDiv()\n-- do we need to see it again?\n--for i=1,n do print(noZeroLTimesX[i][1]) end\nprint'<pre>'\nprint'eigen_leftTransform:'\nprint('\\t'..export.C:toCode{\n\9output = range(#noZeroLTimesX):mapi(function(i)\n\9\9return {['(result)->ptr['..(i-1)..']'] = noZeroLTimesX[i][1]}\n\9end),\n\9assignOnly = true,\n}:gsub('\\n', '\\\\\\n\\t')..'\\\\')\nprint'</pre>'\n;", output="<pre><br>\neigen_leftTransform:<br>\n\9real const tmp1 = 1. / 2.;\\\n\9real const tmp2 = pow(gamma_uu.xx, tmp1);\\\n\9real const tmp3 = Theta * tmp2;\\\n\9real const tmp4 = sqrt_f * tmp3;\\\n\9real const tmp5 = 3. * tmp1;\\\n\9real const tmp6 = pow(gamma_uu.xx, tmp5);\\\n\9real const tmp7 = K_ll.xx * tmp6;\\\n\9real const tmp8 = sqrt_f * tmp7;\\\n\9real const tmp9 = K_ll.yy * tmp2;\\\n\9real const tmp10 = sqrt_f * tmp9;\\\n\9real const tmp11 = gamma_uu.yy * tmp10;\\\n\9real const tmp12 = K_ll.zz * tmp2;\\\n\9real const tmp13 = sqrt_f * tmp12;\\\n\9real const tmp14 = gamma_uu.zz * tmp13;\\\n\9real const tmp15 = K_ll.xy * tmp2;\\\n\9real const tmp16 = sqrt_f * tmp15;\\\n\9real const tmp17 = gamma_uu.xy * tmp16;\\\n\9real const tmp18 = K_ll.xz * tmp2;\\\n\9real const tmp19 = sqrt_f * tmp18;\\\n\9real const tmp20 = gamma_uu.xz * tmp19;\\\n\9real const tmp21 = K_ll.yz * tmp2;\\\n\9real const tmp22 = sqrt_f * tmp21;\\\n\9real const tmp23 = gamma_uu.yz * tmp22;\\\n\9real const tmp24 = gamma_uu.xx * a_l.x;\\\n\9real const tmp25 = gamma_uu.xx * d_lll.x.yy;\\\n\9real const tmp26 = gamma_uu.xx * d_lll.x.yz;\\\n\9real const tmp27 = gamma_uu.xx * d_lll.x.zz;\\\n\9real const tmp28 = gamma_uu.xy * d_lll.x.yy;\\\n\9real const tmp29 = gamma_uu.xz * d_lll.x.yz;\\\n\9real const tmp30 = -1. * tmp29;\\\n\9real const tmp31 = -1. * tmp28;\\\n\9real const tmp32 = -1. * Z_l.y;\\\n\9real const tmp33 = gamma_uu.xy * d_lll.x.yz;\\\n\9real const tmp34 = gamma_uu.xz * d_lll.x.zz;\\\n\9real const tmp35 = -1. * tmp34;\\\n\9real const tmp36 = -1. * tmp33;\\\n\9real const tmp37 = -1. * Z_l.z;\\\n\9real const tmp38 = gamma_uu.xx * Z_l.x;\\\n\9real const tmp39 = gamma_uu.xy * Z_l.y;\\\n\9real const tmp40 = gamma_uu.xz * Z_l.z;\\\n\9real const tmp41 = gamma_uu.xy * gamma_uu.xy;\\\n\9real const tmp42 = d_lll.x.yy * tmp41;\\\n\9real const tmp43 = gamma_uu.xz * gamma_uu.xz;\\\n\9real const tmp44 = d_lll.x.zz * tmp43;\\\n\9real const tmp45 = gamma_uu.yy * d_lll.x.yy;\\\n\9real const tmp46 = gamma_uu.zz * d_lll.x.zz;\\\n\9real const tmp47 = gamma_uu.yz * d_lll.x.yz;\\\n\9real const tmp48 = gamma_uu.xx * tmp47;\\\n\9real const tmp49 = gamma_uu.xy * tmp29;\\\n\9real const tmp50 = 2. * tmp48;\\\n\9real const tmp51 = -2. * tmp49;\\\n\9real const tmp52 = gamma_uu.xx * tmp46;\\\n\9real const tmp53 = tmp50 + tmp51;\\\n\9real const tmp54 = gamma_uu.xx * tmp45;\\\n\9real const tmp55 = tmp52 + tmp53;\\\n\9real const tmp56 = -1. * tmp44;\\\n\9real const tmp57 = tmp54 + tmp55;\\\n\9real const tmp58 = -1. * tmp42;\\\n\9real const tmp59 = tmp56 + tmp57;\\\n\9real const tmp60 = tmp58 + tmp59;\\\n\9real const tmp61 = -1. * tmp40;\\\n\9real const tmp62 = -1. * tmp39;\\\n\9real const tmp63 = -1. * tmp38;\\\n\9real const tmp64 = sqrt_f * sqrt_f;\\\n\9(result)->ptr[0] = 2. * tmp4 + -1. * tmp8 + -1. * tmp11 + -1. * tmp14 + -2. * tmp17 + -2. * tmp23 + -2. * tmp20 + tmp24;\\\n\9(result)->ptr[1] = -1. * tmp9 + tmp25;\\\n\9(result)->ptr[2] = -1. * tmp21 + tmp26;\\\n\9(result)->ptr[3] = -1. * tmp12 + tmp27;\\\n\9(result)->ptr[4] = -1. * tmp15 + tmp30 + tmp31 + tmp32;\\\n\9(result)->ptr[5] = -1. * tmp18 + tmp35 + tmp36 + tmp37;\\\n\9(result)->ptr[6] = -1. * tmp3 + tmp60 + tmp61 + tmp62 + tmp63;\\\n\9(result)->ptr[7] = -1. * a_l.x + 2. * Z_l.x * tmp64 + gamma_uu.xx * d_lll.x.xx * tmp64 + -1. * gamma_uu.yy * d_lll.x.yy * tmp64 + -2. * gamma_uu.yz * d_lll.x.yz * tmp64 + -1. * gamma_uu.zz * d_lll.x.zz * tmp64;\\\n\9(result)->ptr[8] = Z_l.y + gamma_uu.xx * d_lll.x.xy + tmp28 + tmp29;\\\n\9(result)->ptr[9] = Z_l.z + gamma_uu.xx * d_lll.x.xz + tmp33 + tmp34;\\\n\9(result)->ptr[10] = tmp9 + tmp25;\\\n\9(result)->ptr[11] = tmp21 + tmp26;\\\n\9(result)->ptr[12] = tmp12 + tmp27;\\\n\9(result)->ptr[13] = tmp15 + tmp30 + tmp31 + tmp32;\\\n\9(result)->ptr[14] = tmp18 + tmp35 + tmp36 + tmp37;\\\n\9(result)->ptr[15] = tmp3 + tmp60 + tmp61 + tmp62 + tmp63;\\\n\9(result)->ptr[16] = -2. * tmp4 + 2. * tmp17 + 2. * tmp23 + 2. * tmp20 + tmp8 + tmp11 + tmp14 + tmp24;\\<br>\n</pre><br>\n", outputtype="html", uid=128},
	{hidden=false, input="noZeroRTimesY = (noZeroRMat * noZeroY)()\n\9:replace(f, sqrt_f^2)\n\9:simplifyAddMulDiv()\n-- do we need to see it again?\n--for i=1,n do print(noZeroRTimesY[i][1]) end\n\nprint'<pre>'\nprint'eigen_rightTransform:'\nprint('\\t'..export.C:toCode{\n\9output = range(#noZeroX):mapi(function(i)\n\9\9-- why 7+ ?  to skip past alpha, gamma_ij\n\9\9return {[noZeroRightResultVars[i][1].name] = noZeroRTimesY[i][1]}\n\9end),\n\9assignOnly = true,\n}:gsub('\\n', '\\\\\\n\\t')..'\\\\')\nprint'</pre>'\n;", output="<pre><br>\neigen_rightTransform:<br>\n\9real const tmp1 = 1. / gamma_uu.xx;\\\n\9real const tmp2 = 1. / 2.;\\\n\9real const tmp3 = gamma_uu.xx * gamma_uu.xx;\\\n\9real const tmp4 = sqrt_f * sqrt_f;\\\n\9real const tmp5 = 1. / tmp3;\\\n\9real const tmp6 = 1. / tmp4;\\\n\9real const tmp7 = tmp5 * tmp6;\\\n\9real const tmp8 = (inputU)->ptr[13] * tmp1;\\\n\9real const tmp9 = (inputU)->ptr[4] * tmp1;\\\n\9real const tmp10 = (inputU)->ptr[14] * tmp1;\\\n\9real const tmp11 = (inputU)->ptr[5] * tmp1;\\\n\9real const tmp12 = (inputU)->ptr[10] * tmp1;\\\n\9real const tmp13 = (inputU)->ptr[1] * tmp1;\\\n\9real const tmp14 = (inputU)->ptr[11] * tmp1;\\\n\9real const tmp15 = (inputU)->ptr[2] * tmp1;\\\n\9real const tmp16 = (inputU)->ptr[12] * tmp1;\\\n\9real const tmp17 = (inputU)->ptr[3] * tmp1;\\\n\9real const tmp18 = 3. * tmp2;\\\n\9real const tmp19 = pow(gamma_uu.xx, tmp18);\\\n\9real const tmp20 = 1. / sqrt_f;\\\n\9real const tmp21 = 1. / tmp19;\\\n\9real const tmp22 = tmp20 * tmp21;\\\n\9real const tmp23 = pow(gamma_uu.xx, tmp2);\\\n\9real const tmp24 = 1. / tmp23;\\\n\9(result)->ptr[7] = (inputU)->ptr[16] * tmp1 * tmp2 + (inputU)->ptr[0] * tmp1 * tmp2;\\\n\9(result)->ptr[10] = (inputU)->ptr[0] * tmp2 * tmp7 + (inputU)->ptr[16] * tmp2 * tmp7 + (inputU)->ptr[7] * tmp1 * tmp6 + (inputU)->ptr[15] * tmp5 + (inputU)->ptr[6] * tmp5 + -1. * gamma_uu.yy * (inputU)->ptr[10] * tmp2 * tmp5 + -1. * gamma_uu.yy * (inputU)->ptr[1] * tmp2 * tmp5 + -1. * gamma_uu.zz * (inputU)->ptr[12] * tmp2 * tmp5 + -1. * gamma_uu.zz * (inputU)->ptr[3] * tmp2 * tmp5 + -1. * gamma_uu.xy * (inputU)->ptr[13] * tmp5 + -1. * gamma_uu.xy * (inputU)->ptr[4] * tmp5 + -1. * gamma_uu.xz * (inputU)->ptr[14] * tmp5 + -1. * gamma_uu.xz * (inputU)->ptr[5] * tmp5 + -1. * gamma_uu.yz * (inputU)->ptr[2] * tmp5 + -1. * gamma_uu.yz * (inputU)->ptr[11] * tmp5;\\\n\9(result)->ptr[11] = tmp2 * tmp8 + (inputU)->ptr[8] * tmp1 + tmp2 * tmp9;\\\n\9(result)->ptr[12] = tmp2 * tmp10 + (inputU)->ptr[9] * tmp1 + tmp2 * tmp11;\\\n\9(result)->ptr[13] = tmp2 * tmp13 + tmp2 * tmp12;\\\n\9(result)->ptr[14] = tmp2 * tmp15 + tmp2 * tmp14;\\\n\9(result)->ptr[15] = tmp2 * tmp17 + tmp2 * tmp16;\\\n\9(result)->ptr[28] = -1. * (inputU)->ptr[0] * tmp2 * tmp22 + (inputU)->ptr[16] * tmp2 * tmp22 + (inputU)->ptr[15] * tmp21 + -1. * (inputU)->ptr[6] * tmp21 + -1. * gamma_uu.yy * (inputU)->ptr[10] * tmp2 * tmp21 + gamma_uu.yy * (inputU)->ptr[1] * tmp2 * tmp21 + -1. * gamma_uu.zz * (inputU)->ptr[12] * tmp2 * tmp21 + gamma_uu.zz * (inputU)->ptr[3] * tmp2 * tmp21 + -1. * gamma_uu.xy * (inputU)->ptr[13] * tmp21 + gamma_uu.xy * (inputU)->ptr[4] * tmp21 + -1. * gamma_uu.xz * (inputU)->ptr[14] * tmp21 + gamma_uu.xz * (inputU)->ptr[5] * tmp21 + gamma_uu.yz * (inputU)->ptr[2] * tmp21 + -1. * gamma_uu.yz * (inputU)->ptr[11] * tmp21;\\\n\9(result)->ptr[29] = -1. * (inputU)->ptr[4] * tmp2 * tmp24 + (inputU)->ptr[13] * tmp2 * tmp24;\\\n\9(result)->ptr[30] = -1. * (inputU)->ptr[5] * tmp2 * tmp24 + (inputU)->ptr[14] * tmp2 * tmp24;\\\n\9(result)->ptr[31] = -1. * (inputU)->ptr[1] * tmp2 * tmp24 + (inputU)->ptr[10] * tmp2 * tmp24;\\\n\9(result)->ptr[32] = -1. * (inputU)->ptr[2] * tmp2 * tmp24 + (inputU)->ptr[11] * tmp2 * tmp24;\\\n\9(result)->ptr[33] = -1. * (inputU)->ptr[3] * tmp2 * tmp24 + (inputU)->ptr[12] * tmp2 * tmp24;\\\n\9(result)->ptr[34] = -1. * (inputU)->ptr[6] * tmp2 * tmp24 + (inputU)->ptr[15] * tmp2 * tmp24;\\\n\9(result)->ptr[35] = -1. * (inputU)->ptr[15] * tmp1 * tmp2 + -1. * (inputU)->ptr[6] * tmp1 * tmp2 + gamma_uu.xy * tmp2 * tmp8 + gamma_uu.xy * tmp2 * tmp9 + gamma_uu.xz * tmp2 * tmp10 + gamma_uu.xz * tmp2 * tmp11 + gamma_uu.yy * tmp2 * tmp12 + gamma_uu.yy * tmp2 * tmp13 + gamma_uu.zz * tmp2 * tmp16 + gamma_uu.zz * tmp2 * tmp17 + gamma_uu.yz * tmp15 + gamma_uu.yz * tmp14;\\\n\9(result)->ptr[36] = -1. * (inputU)->ptr[13] * tmp2 + -1. * (inputU)->ptr[4] * tmp2 + -1. * gamma_uu.xy * tmp2 * tmp12 + -1. * gamma_uu.xy * tmp2 * tmp13 + -1. * gamma_uu.xz * tmp2 * tmp15 + -1. * gamma_uu.xz * tmp2 * tmp14;\\\n\9(result)->ptr[37] = -1. * (inputU)->ptr[14] * tmp2 + -1. * (inputU)->ptr[5] * tmp2 + -1. * gamma_uu.xy * tmp2 * tmp14 + -1. * gamma_uu.xy * tmp2 * tmp15 + -1. * gamma_uu.xz * tmp2 * tmp17 + -1. * gamma_uu.xz * tmp2 * tmp16;\\<br>\n</pre><br>\n", outputtype="html", uid=125},
	{hidden=false, input="print'<pre>'\nfor i=1,#noZeroEigenvalueMat do\n\9local l = noZeroEigenvalueMat[i][i]\9\n\9io.write('\\t\\t'..(i>1 and 'else' or '')..'if args.waveIndex == '..(i-1)..' then')\n\9if Constant.isValue( (l - (-alpha*sqrt(f*gUxx)))(), 0) then\n\9\9io.write(\" return '-'..betaUi..' - eig_lambdaGauge'\\n\")\n\9elseif Constant.isValue( (l - (-alpha*sqrt(gUxx)))(), 0) then\n\9\9io.write(\" return '-'..betaUi..' - eig_lambdaLight'\\n\")\n\9elseif Constant.isValue( l, 0) then\n\9\9io.write(\" return '-'..betaUi\\n\")\n\9elseif Constant.isValue( (l - (alpha*sqrt(gUxx)))(), 0) then\n\9\9io.write(\" return '-'..betaUi..' + eig_lambdaLight'\\n\")\n\9elseif Constant.isValue( (l - (alpha*sqrt(f*gUxx)))(), 0) then\n\9\9io.write(\" return '-'..betaUi..' + eig_lambdaGauge'\\n\")\n\9else\n\9\9io.write(\" error('idk how to handle '\"..export.C(l)..\")\\n\")\n\9end\nend\nprint('\\t\\tend')\nprint'</pre>'\n;", output="<pre><br>\n\9\9if args.waveIndex == 0 then return '-'..betaUi\n\9\9elseif args.waveIndex == 1 then return '-'..betaUi\n\9\9elseif args.waveIndex == 2 then return '-'..betaUi\n\9\9elseif args.waveIndex == 3 then return '-'..betaUi..' + eig_lambdaLight'\n\9\9elseif args.waveIndex == 4 then return '-'..betaUi..' - eig_lambdaLight'\n\9\9elseif args.waveIndex == 5 then return '-'..betaUi..' + eig_lambdaLight'\n\9\9elseif args.waveIndex == 6 then return '-'..betaUi..' - eig_lambdaLight'\n\9\9elseif args.waveIndex == 7 then return '-'..betaUi..' + eig_lambdaLight'\n\9\9elseif args.waveIndex == 8 then return '-'..betaUi..' - eig_lambdaLight'\n\9\9elseif args.waveIndex == 9 then return '-'..betaUi..' + eig_lambdaLight'\n\9\9elseif args.waveIndex == 10 then return '-'..betaUi..' - eig_lambdaLight'\n\9\9elseif args.waveIndex == 11 then return '-'..betaUi..' + eig_lambdaLight'\n\9\9elseif args.waveIndex == 12 then return '-'..betaUi..' - eig_lambdaLight'\n\9\9elseif args.waveIndex == 13 then return '-'..betaUi..' + eig_lambdaLight'\n\9\9elseif args.waveIndex == 14 then return '-'..betaUi..' - eig_lambdaLight'\n\9\9elseif args.waveIndex == 15 then return '-'..betaUi..' + eig_lambdaGauge'\n\9\9elseif args.waveIndex == 16 then return '-'..betaUi..' - eig_lambdaGauge'\n\9\9end<br>\n</pre><br>\n", outputtype="html", uid=131}
}

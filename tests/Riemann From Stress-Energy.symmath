{
	{hidden=false, input="symmath.implicitVars = false\nsymmath.fixVariableNames = false", output="false", outputtype="html", uid=1},
	{hidden=false, input="alpha = var'\\\\alpha'\nbeta = var'\\\\beta'\nkappa = var'\\\\kappa'\nrho = var'\\\\rho'\nc = var'c'\nn = var'n'\nt = var't'\nu = var'u'\nx = var'x'\ny = var'y'\nz = var'z'\nA = var'A'\nB = var'B'\nC = var'C'\nF = var'F'\nG = var'G'\nP = var'P'\nR = var'R'\nT = var'T'\n;", output="", outputtype="html", uid=4},
	{hidden=false, input="--[[ nope, don't set a dimension just yet ...\nmanifold = Tensor.Manifold{dim=4}\nchart = manifold:Chart{coords={t,x,y,z}}\n;\n--]]\n-- TODO dim=var'n' ... but then we don't want coords={...} ...", output="", outputtype="html", uid=9},
	{hidden=false, input="g = Tensor:metricSymbol()\ndelta = Tensor:deltaSymbol()\n;", output="", outputtype="html", uid=7},
	{hidden=false, input="kappaDef = kappa:eq((8 * pi * G)/c^4)", output="${\\kappa} = {\\frac{{{8}} {{Ï€}} \\cdot {{G}}}{{c}^{4}}}$", outputtype="html", uid=5},
	{hidden=false, input="print('<h1>Einstein field equations</h1>')", output="<h1>Einstein field equations</h1><br>\n", outputtype="html", uid=16},
	{hidden=false, input="Guv_wrt_Tvu_def = G'_uv':eq(kappa * T'_uv')", output="${{{ G} _u} _v} = {{{\\kappa}} \\cdot {{{{ T} _u} _v}}}$", outputtype="html", uid=2},
	{hidden=false, input="local tmp = Guv_wrt_Tvu_def * g'^uv'\nprint(tmp)\ntmp = tmp:simplifyMetrics():tidyIndexes()\nG_wrt_T_def = tmp\nprint(G_wrt_T_def)\n;", output="${{{{{ G} _u} _v}} {{{{ g} ^u} ^v}}} = {{{\\kappa}} \\cdot {{{{ T} _u} _v}} {{{{ g} ^u} ^v}}}$<br>\n${{{ G} ^a} _a} = {{{\\kappa}} \\cdot {{{{ T} ^a} _a}}}$<br>\n", outputtype="html", uid=8},
	{hidden=false, input="print('<h1>Einstein tensor wrt Ricci tensor</h1>')", output="<h1>Einstein tensor wrt Ricci tensor</h1><br>\n", outputtype="html", uid=17},
	{hidden=false, input="Guv_wrt_Ruv_def = G'_uv':eq(R'_uv' - frac(1,2) * R'^a_a' * g'_uv')", output="${{{ G} _u} _v} = {{{{ R} _u} _v}{-{{{\\frac{1}{2}}} {{{{ R} ^a} _a}} {{{{ g} _u} _v}}}}}$", outputtype="html", uid=3},
	{hidden=false, input="local tmp = Guv_wrt_Ruv_def * g'^uv'\nprint(tmp)\ntmp = tmp\n\9:simplifyMetrics()\n\9:tidyIndexes()\n\9:replace(delta'_b^b', n)\n\9()\nG_wrt_R_def = tmp\nprint(G_wrt_R_def)\n;", output="${{{{{ G} _u} _v}} {{{{ g} ^u} ^v}}} = {{{\\left({{{{ R} _u} _v}{-{{{\\frac{1}{2}}} {{{{ R} ^a} _a}} {{{{ g} _u} _v}}}}}\\right)}} {{{{ g} ^u} ^v}}}$<br>\n${{{ G} ^a} _a} = {{\\frac{1}{2}} {{{{{ R} ^a} _a}} {{\\left({{2}{-{n}}}\\right)}}}}$<br>\n", outputtype="html", uid=6},
	{hidden=false, input="--R_wrt_G_def = G_wrt_R_def:solve(R'^a_a')\nlocal tmp = G_wrt_R_def:solve(R'^a_a')\nlocal tmp2 = R'^a_a':eq(-frac(2, n-2) * G'^a_a')\nasserteq((tmp2 - tmp)(), Constant(0):eq(0))\nprint(tmp2)\nR_wrt_G_def = tmp2\n;", output="${{{ R} ^a} _a} = { {-{\\frac{2}{{n}{-{2}}}}} {{{{ G} ^a} _a}}}$<br>\n", outputtype="html", uid=10},
	{hidden=false, input="R_wrt_T_def = R_wrt_G_def:subst(G_wrt_T_def)", output="${{{ R} ^a} _a} = { {-{\\frac{2}{{n}{-{2}}}}} {{\\kappa}} \\cdot {{{{ T} ^a} _a}}}$", outputtype="html", uid=21},
	{hidden=false, input="-- TODO this but only for scalar ... \n-- better TOOD, just don't store scalars, just leave them as traces.\nlocal tmp = Guv_wrt_Ruv_def:subst(R_wrt_G_def)\nprint(tmp)\ntmp = tmp:solve(R'_uv')\nprint(tmp)\n-- TODO would be nice to have this in the form of G'_uv' - 1/(n-2)*g'_uv' * G'^a_a'\nlocal tmp2 = R'_uv':eq(G'_uv' - frac(1, n-2) * G'^a_a' * g'_uv')\nasserteq((tmp2 - tmp)(), Constant(0):eq(0))\nRuv_wrt_Guv_def = tmp2\nprint(Ruv_wrt_Guv_def)\n;", output="${{{ G} _u} _v} = {{{{ R} _u} _v}{-{{{\\frac{1}{2}}} {{{{ g} _u} _v}} \\cdot  {-{\\frac{2}{{n}{-{2}}}}} {{{{ G} ^a} _a}}}}}$<br>\n${{{ R} _u} _v} = {\\frac{{{{2}} {{{{ G} _u} _v}}}{-{{{n}} {{{{ G} _u} _v}}}} + {{{{{ G} ^a} _a}} {{{{ g} _u} _v}}}}{{2}{-{n}}}}$<br>\n${{{ R} _u} _v} = {{{{ G} _u} _v}{-{{{\\frac{1}{{n}{-{2}}}}} {{{{ G} ^a} _a}} {{{{ g} _u} _v}}}}}$<br>\n", outputtype="html", uid=11},
	{hidden=false, input="print('<h1>Ricci tensor wrt stress-energy tensor</h1>')", output="<h1>Ricci tensor wrt stress-energy tensor</h1><br>\n", outputtype="html", uid=15},
	{hidden=false, input="Ruv_wrt_Tuv_def = Ruv_wrt_Guv_def\n\9:replace(G'^a_a', G'_ab' * g'^ab')\n\9:subst(Guv_wrt_Tvu_def)\n\9:subst(Guv_wrt_Tvu_def:reindex{uv='ab'})\n\9--:simplifyMetrics()\9-- ugly fractions\n\9:replace(g'^ab' * T'_ab', T'^a_a')", output="${{{ R} _u} _v} = {{-{{{\\frac{1}{{n}{-{2}}}}} {{{{ g} _u} _v}} {{\\kappa}} \\cdot {{{{ T} ^a} _a}}}} + {{{\\kappa}} \\cdot {{{{ T} _u} _v}}}}$", outputtype="html", uid=13},
	{hidden=false, input="print('<h1>Schouten tensor wrt Ricci tensor</h1>')", output="<h1>Schouten tensor wrt Ricci tensor</h1><br>\n", outputtype="html", uid=14},
	{hidden=false, input="Puv_wrt_Ruv_def = P'_uv':eq(frac(1,n-2)*(R'_uv' - frac(1,2*(n-1)) * R'^a_a' * g'_uv' ))", output="${{{ P} _u} _v} = {{{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{ R} _u} _v}{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ R} ^a} _a}} {{{{ g} _u} _v}}}}}\\right)}}}$", outputtype="html", uid=18},
	{hidden=false, input="print('<h1>Schouten tensor wrt stress-energy tensor</h1>')", output="<h1>Schouten tensor wrt stress-energy tensor</h1><br>\n", outputtype="html", uid=22},
	{hidden=false, input="local tmp = Puv_wrt_Ruv_def\n\9:subst(Ruv_wrt_Tuv_def)\n\9:subst(R_wrt_T_def)\n\9:simplify()\n\9-- how did this go from n^2 to n^4 ... \nprint(tmp)\nlocal tmp2 = P'_uv':eq(kappa * frac(1, n-2) * (T'_uv' - frac(1, n-1) * T'^a_a' * g'_uv'))\nasserteq((tmp - tmp2)(), Constant(0):eq(0))\nPuv_wrt_Tuv_def = tmp2\nprint(Puv_wrt_Tuv_def)\n;", output="${{{ P} _u} _v} = {\\frac{{{\\kappa}} \\cdot {{\\left({{{{{{ T} _u} _v}} {{{n}^{3}}}}{-{{{4}} {{{{ T} _u} _v}}}}{-{{{5}} {{{{ T} _u} _v}} {{{n}^{2}}}}}{-{{{{{ T} ^a} _a}} {{{{ g} _u} _v}} {{{n}^{2}}}}}{-{{{4}} {{{{ T} ^a} _a}} {{{{ g} _u} _v}}}} + {{{8}} {{n}} {{{{ T} _u} _v}}} + {{{4}} {{n}} {{{{ T} ^a} _a}} {{{{ g} _u} _v}}}}\\right)}}}{{8} + {{n}^{4}}{-{{{7}} {{{n}^{3}}}}} + {{{18}} {{{n}^{2}}}}{-{{{20}} {{n}}}}}}$<br>\n${{{ P} _u} _v} = {{{\\kappa}} \\cdot {{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{ T} _u} _v}{-{{{\\frac{1}{{n}{-{1}}}}} {{{{ T} ^a} _a}} {{{{ g} _u} _v}}}}}\\right)}}}$<br>\n", outputtype="html", uid=19},
	{hidden=false, input="print('<h1>Ricci decomposition wrt Schouten tensor</h1>')", output="<h1>Ricci decomposition wrt Schouten tensor</h1><br>\n", outputtype="html", uid=23},
	{hidden=false, input="function KulkarniNomizu(a,b) return a'_ac' * b'_bd' + a'_bd' * b'_ac' - a'_ad' * b'_bc' - a'_bc' * b'_ad' end", output="", outputtype="html", uid=30},
	{hidden=false, input="-- TODO or as a symbol with four indexes and this as its identity/definition:\nprint[[$\\require{enclose}$]]", output="$\\require{enclose}$<br>\n", outputtype="html", uid=32},
	{hidden=false, input="function KulkarniNomizuVar(a, b) return var('('..a..[[ \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ ]]..b..')') end", output="", outputtype="html", uid=35},
	{hidden=false, input="KN_AB_var = KulkarniNomizuVar('A', 'B')\nKN_AB_def = KN_AB_var'_abcd':eq(KulkarniNomizu(A, B))\nprint(KN_AB_def)\n;", output="${{{{{ (A \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ B)} _a} _b} _c} _d} = {{{{{{{{ A} _a} _c}} {{{{ B} _b} _d}}} + {{{{{ A} _b} _d}} {{{{ B} _a} _c}}}}{-{{{{{ A} _a} _d}} {{{{ B} _b} _c}}}}}{-{{{{{ A} _b} _c}} {{{{ B} _a} _d}}}}}$<br>\n", outputtype="html", uid=33},
	{hidden=false, input="KN_Pg_var = KulkarniNomizuVar('P', 'g')\nKN_Pg_def = KN_Pg_var'_abcd':eq(KulkarniNomizu(P, g))\nprint(KN_Pg_def)\n;", output="${{{{{ (P \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d} = {{{{{{{{ P} _a} _c}} {{{{ g} _b} _d}}} + {{{{{ P} _b} _d}} {{{{ g} _a} _c}}}}{-{{{{{ P} _a} _d}} {{{{ g} _b} _c}}}}}{-{{{{{ P} _b} _c}} {{{{ g} _a} _d}}}}}$<br>\n", outputtype="html", uid=36},
	{hidden=false, input="Rabcd_wrt_KN_Pg_abcd_def = R'_abcd':eq(C'_abcd' + KN_Pg_var'_abcd')", output="${{{{{ R} _a} _b} _c} _d} = {{{{{{ C} _a} _b} _c} _d} + {{{{{ (P \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d}}$", outputtype="html", uid=34},
	{hidden=false, input="Rabcd_wrt_Pab_def = Rabcd_wrt_KN_Pg_abcd_def:subst(KN_Pg_def)", output="${{{{{ R} _a} _b} _c} _d} = {{{{{{ C} _a} _b} _c} _d} + {{{{{ P} _a} _c}} {{{{ g} _b} _d}}} + {{{{{ P} _b} _d}} {{{{ g} _a} _c}}}{-{{{{{ P} _a} _d}} {{{{ g} _b} _c}}}}{-{{{{{ P} _b} _c}} {{{{ g} _a} _d}}}}}$", outputtype="html", uid=24},
	{hidden=false, input="print('<h1>Ricci decomposition wrt Ricci tensor</h1>')", output="<h1>Ricci decomposition wrt Ricci tensor</h1><br>\n", outputtype="html", uid=25},
	{hidden=false, input="Rabcd_wrt_Rab_def = Rabcd_wrt_Pab_def:subst(\n\9Puv_wrt_Ruv_def:reindex{uva='acu'},\n\9Puv_wrt_Ruv_def:reindex{uva='bdu'},\n\9Puv_wrt_Ruv_def:reindex{uva='adu'},\n\9Puv_wrt_Ruv_def:reindex{uva='bcu'}\n)", output="${{{{{ R} _a} _b} _c} _d} = {{{{{{ C} _a} _b} _c} _d} + {{{{{ g} _b} _d}} {{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{ R} _a} _c}{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ R} ^u} _u}} {{{{ g} _a} _c}}}}}\\right)}}} + {{{{{ g} _a} _c}} {{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{ R} _b} _d}{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ R} ^u} _u}} {{{{ g} _b} _d}}}}}\\right)}}}{-{{{{{ g} _b} _c}} {{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{ R} _a} _d}{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ R} ^u} _u}} {{{{ g} _a} _d}}}}}\\right)}}}}{-{{{{{ g} _a} _d}} {{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{ R} _b} _c}{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ R} ^u} _u}} {{{{ g} _b} _c}}}}}\\right)}}}}}$", outputtype="html", uid=26},
	{hidden=false, input="-- Ricci decomposition can be written in terms of R(/\\)g and g(/\\)g .... can it also be rewritten in terms of a trace of R(/\\)R?\nKN_Rg_var = KulkarniNomizuVar('R', 'g')\nKN_Rg_def = KN_Rg_var'_abcd':eq(KulkarniNomizu(R, g))\nprint(KN_Rg_def)\n;", output="${{{{{ (R \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d} = {{{{{{{{ R} _a} _c}} {{{{ g} _b} _d}}} + {{{{{ R} _b} _d}} {{{{ g} _a} _c}}}}{-{{{{{ R} _a} _d}} {{{{ g} _b} _c}}}}}{-{{{{{ R} _b} _c}} {{{{ g} _a} _d}}}}}$<br>\n", outputtype="html", uid=37},
	{hidden=false, input="KN_gg_var = KulkarniNomizuVar('g', 'g')\nKN_gg_def = KN_gg_var'_abcd':eq(KulkarniNomizu(g, g)())\nprint(KN_gg_def)\n;", output="${{{{{ (g \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d} = {{{2}} {{\\left({{{{{{ g} _a} _c}} {{{{ g} _b} _d}}}{-{{{{{ g} _a} _d}} {{{{ g} _b} _c}}}}}\\right)}}}$<br>\n", outputtype="html", uid=38},
	{hidden=false, input="Rabcd_wrt_KN_Rg_gg_def = R'_abcd':eq(C'_abcd' + frac(1, n-2) * ((KN_Rg_def:lhs() - frac(1, 2*(n-1)) * R'^u_u' * KN_gg_def:lhs())))\nasserteq((Rabcd_wrt_KN_Rg_gg_def:subst(KN_Rg_def, KN_gg_def) - Rabcd_wrt_Rab_def)(), Constant(0):eq(0))\nprint(Rabcd_wrt_KN_Rg_gg_def)\n;", output="${{{{{ R} _a} _b} _c} _d} = {{{{{{ C} _a} _b} _c} _d} + {{{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{{{ (R \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d}{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ R} ^u} _u}} {{{{{{ (g \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d}}}}}\\right)}}}}$<br>\n", outputtype="html", uid=39},
	{hidden=false, input="print('<h1>Ricci decomposition wrt stress-energy tensor</h1>')", output="<h1>Ricci decomposition wrt stress-energy tensor</h1><br>\n", outputtype="html", uid=40},
	{hidden=false, input="KN_Tg_var = KulkarniNomizuVar('T', 'g')\nKN_Tg_def = KN_Tg_var'_abcd':eq(KulkarniNomizu(T, g))\nprint(KN_Tg_def)\n;", output="${{{{{ (T \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d} = {{{{{{{{ T} _a} _c}} {{{{ g} _b} _d}}} + {{{{{ T} _b} _d}} {{{{ g} _a} _c}}}}{-{{{{{ T} _a} _d}} {{{{ g} _b} _c}}}}}{-{{{{{ T} _b} _c}} {{{{ g} _a} _d}}}}}$<br>\n", outputtype="html", uid=43},
	{hidden=false, input="local tmp = Rabcd_wrt_Rab_def:subst(\n\9Ruv_wrt_Tuv_def:reindex{uva='acu'},\n\9Ruv_wrt_Tuv_def:reindex{uva='bdu'},\n\9Ruv_wrt_Tuv_def:reindex{uva='adu'},\n\9Ruv_wrt_Tuv_def:reindex{uva='bcu'},\n\9R_wrt_T_def:reindex{a='u'}\n)\nprint(tmp)\n--tmp = tmp() -- simplify() is ugly\n--print(tmp)\nlocal tmp2 = R'_abcd':eq(C'_abcd' + kappa * frac(1, n-2) * (KN_Tg_def:rhs() - frac(1, n-1) * T'^u_u' * KN_gg_def:rhs()))\nprint(tmp2)\nasserteq((tmp - tmp2)(), Constant(0):eq(0))\nRabcd_wrt_Tab_def = tmp2\n;", output="${{{{{ R} _a} _b} _c} _d} = {{{{{{ C} _a} _b} _c} _d} + {{{{{ g} _b} _d}} {{\\frac{1}{{n}{-{2}}}}} {{\\left({{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ g} _a} _c}} \\cdot  {-{\\frac{2}{{n}{-{2}}}}} {{\\kappa}} \\cdot {{{{ T} ^u} _u}}}}{-{{{\\frac{1}{{n}{-{2}}}}} {{{{ g} _a} _c}} {{\\kappa}} \\cdot {{{{ T} ^u} _u}}}} + {{{\\kappa}} \\cdot {{{{ T} _a} _c}}}}\\right)}}} + {{{{{ g} _a} _c}} {{\\frac{1}{{n}{-{2}}}}} {{\\left({{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ g} _b} _d}} \\cdot  {-{\\frac{2}{{n}{-{2}}}}} {{\\kappa}} \\cdot {{{{ T} ^u} _u}}}}{-{{{\\frac{1}{{n}{-{2}}}}} {{{{ g} _b} _d}} {{\\kappa}} \\cdot {{{{ T} ^u} _u}}}} + {{{\\kappa}} \\cdot {{{{ T} _b} _d}}}}\\right)}}}{-{{{{{ g} _b} _c}} {{\\frac{1}{{n}{-{2}}}}} {{\\left({{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ g} _a} _d}} \\cdot  {-{\\frac{2}{{n}{-{2}}}}} {{\\kappa}} \\cdot {{{{ T} ^u} _u}}}}{-{{{\\frac{1}{{n}{-{2}}}}} {{{{ g} _a} _d}} {{\\kappa}} \\cdot {{{{ T} ^u} _u}}}} + {{{\\kappa}} \\cdot {{{{ T} _a} _d}}}}\\right)}}}}{-{{{{{ g} _a} _d}} {{\\frac{1}{{n}{-{2}}}}} {{\\left({{-{{{\\frac{1}{{{2}} {{\\left({{n}{-{1}}}\\right)}}}}} {{{{ g} _b} _c}} \\cdot  {-{\\frac{2}{{n}{-{2}}}}} {{\\kappa}} \\cdot {{{{ T} ^u} _u}}}}{-{{{\\frac{1}{{n}{-{2}}}}} {{{{ g} _b} _c}} {{\\kappa}} \\cdot {{{{ T} ^u} _u}}}} + {{{\\kappa}} \\cdot {{{{ T} _b} _c}}}}\\right)}}}}}$<br>\n${{{{{ R} _a} _b} _c} _d} = {{{{{{ C} _a} _b} _c} _d} + {{{\\kappa}} \\cdot {{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{{{ T} _a} _c}} {{{{ g} _b} _d}}} + {{{{{ T} _b} _d}} {{{{ g} _a} _c}}}{-{{{{{ T} _a} _d}} {{{{ g} _b} _c}}}}{-{{{{{ T} _b} _c}} {{{{ g} _a} _d}}}}{-{{{\\frac{1}{{n}{-{1}}}}} {{{{ T} ^u} _u}} {{2}} {{\\left({{{{{{ g} _a} _c}} {{{{ g} _b} _d}}}{-{{{{{ g} _a} _d}} {{{{ g} _b} _c}}}}}\\right)}}}}}\\right)}}}}$<br>\n", outputtype="html", uid=28},
	{hidden=false, input="Rabcd_wrt_KN_Tg_gg_def = R'_abcd':eq(C'_abcd' + kappa * frac(1, n-2) * ((KN_Tg_def:lhs() - frac(1, n-1) * T'^u_u' * KN_gg_def:lhs())))\nasserteq((Rabcd_wrt_KN_Tg_gg_def:subst(KN_Tg_def, KN_gg_def) - Rabcd_wrt_Tab_def)(), Constant(0):eq(0))\nprint(Rabcd_wrt_KN_Tg_gg_def)\n;", output="${{{{{ R} _a} _b} _c} _d} = {{{{{{ C} _a} _b} _c} _d} + {{{\\kappa}} \\cdot {{\\frac{1}{{n}{-{2}}}}} {{\\left({{{{{{ (T \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d}{-{{{\\frac{1}{{n}{-{1}}}}} {{{{ T} ^u} _u}} {{{{{{ (g \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} _a} _b} _c} _d}}}}}\\right)}}}}$<br>\n", outputtype="html", uid=41},
	{hidden=false, input="-- Rabcd_wrt_Tab_def:permute\n-- Rabcd_wrt_Tab_def:reindex\n-- TODO how to reindex index expressions to change their variance?\n--(Rabcd_wrt_KN_Tg_gg_def * g'^ae' * g'^bf')()\9-- this causes our typical fraction simplification problem\nR'^ab_cd':eq(C'^ab_cd' + (kappa / (n - 2)) * (KN_Tg_var'^ab_cd' - frac(1, n-1) * T'^u_u' * KN_gg_var'^ab_cd'))", output="${{{{{ R} ^a} ^b} _c} _d} = {{{{{{ C} ^a} ^b} _c} _d} + {{{\\frac{\\kappa}{{n}{-{2}}}}} {{\\left({{{{{{ (T \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} ^a} ^b} _c} _d}{-{{{\\frac{1}{{n}{-{1}}}}} {{{{ T} ^u} _u}} {{{{{{ (g \\ {\\scriptstyle \\enclose{circle}{\\wedge}} \\ g)} ^a} ^b} _c} _d}}}}}\\right)}}}}$", outputtype="html", uid=42},
	{hidden=false, input="-- TODO same ...\nRabcd_wrt_Tab_UULL_def = R'^ab_cd':eq(C'^ab_cd' + (kappa / (n - 2)) * (T'^a_c' * delta'^b_d' + T'^b_d' * delta'^a_c' - T'^a_d' * delta'^b_c' - T'^b_c' * delta'^a_d' - frac(2, n-1) * T'^u_u' * (delta'^a_c' * delta'^b_d' - delta'^a_d' * delta'^b_c')))", output="${{{{{ R} ^a} ^b} _c} _d} = {{{{{{ C} ^a} ^b} _c} _d} + {{{\\frac{\\kappa}{{n}{-{2}}}}} {{\\left({{{{{{ T} ^a} _c}} {{{{ Î´} ^b} _d}}} + {{{{{ T} ^b} _d}} {{{{ Î´} ^a} _c}}}{-{{{{{ T} ^a} _d}} {{{{ Î´} ^b} _c}}}}{-{{{{{ T} ^b} _c}} {{{{ Î´} ^a} _d}}}}{-{{{\\frac{2}{{n}{-{1}}}}} {{{{ T} ^u} _u}} {{\\left({{{{{{ Î´} ^a} _c}} {{{{ Î´} ^b} _d}}}{-{{{{{ Î´} ^a} _d}} {{{{ Î´} ^b} _c}}}}}\\right)}}}}}\\right)}}}}$", outputtype="html", uid=44},
	{hidden=false, input="print'<h1>Example: Fluid stress-energy</h1>'", output="<h1>Example: Fluid stress-energy</h1><br>\n", outputtype="html", uid=45},
	{hidden=false, input="-- working around fractions\nalphaDef = alpha:eq(kappa / (n - 2))", output="${\\alpha} = {\\frac{\\kappa}{{n}{-{2}}}}$", outputtype="html", uid=49},
	{hidden=false, input="betaDef = beta:eq(2 / (n - 1))", output="${\\beta} = {\\frac{2}{{n}{-{1}}}}$", outputtype="html", uid=50},
	{hidden=false, input="Tab_fluid_def = T'^a_b':eq((rho + P) * u'^a' * u'_b' + P * delta'^a_b')", output="${{{ T} ^a} _b} = {{{{\\left({{\\rho} + {P}}\\right)}} {{{ u} ^a}} {{{ u} _b}}} + {{{P}} {{{{ Î´} ^a} _b}}}}$", outputtype="html", uid=46},
	{hidden=false, input="local tmp = Rabcd_wrt_Tab_UULL_def:subst(\n\9alphaDef:switch(),\n\9betaDef:switch(),\n\9Tab_fluid_def:reindex{ab='ac'},\n\9Tab_fluid_def:reindex{ab='bd'},\n\9Tab_fluid_def:reindex{ab='ad'},\n\9Tab_fluid_def:reindex{ab='bc'},\n\9Tab_fluid_def:reindex{ab='uu'}\n):replace(delta'^u_u', n)\n\9:replace(u'^u' * u'_u', -1)\nprint(tmp)\ntmp = tmp:simplifyMetrics()()\9-- fraction simplify problems...\nprint(tmp)\n;", output="${{{{{ R} ^a} ^b} _c} _d} = {{{{{{ C} ^a} ^b} _c} _d} + {{{\\left({{{{{{ Î´} ^b} _d}} {{\\left({{{{\\left({{\\rho} + {P}}\\right)}} {{{ u} ^a}} {{{ u} _c}}} + {{{P}} {{{{ Î´} ^a} _c}}}}\\right)}}} + {{{{{ Î´} ^a} _c}} {{\\left({{{{\\left({{\\rho} + {P}}\\right)}} {{{ u} ^b}} {{{ u} _d}}} + {{{P}} {{{{ Î´} ^b} _d}}}}\\right)}}}{-{{{{{ Î´} ^b} _c}} {{\\left({{{{\\left({{\\rho} + {P}}\\right)}} {{{ u} ^a}} {{{ u} _d}}} + {{{P}} {{{{ Î´} ^a} _d}}}}\\right)}}}}{-{{{{{ Î´} ^a} _d}} {{\\left({{{{\\left({{\\rho} + {P}}\\right)}} {{{ u} ^b}} {{{ u} _c}}} + {{{P}} {{{{ Î´} ^b} _c}}}}\\right)}}}}{-{{{\\left({{{{{{ Î´} ^a} _c}} {{{{ Î´} ^b} _d}}}{-{{{{{ Î´} ^a} _d}} {{{{ Î´} ^b} _c}}}}}\\right)}} {{\\beta}} \\cdot {{\\left({{{{\\left({{\\rho} + {P}}\\right)}} \\cdot {{-1}}} + {{{P}} {{n}}}}\\right)}}}}}\\right)}} {{\\alpha}}}}$<br>\n${{{{{ R} ^a} ^b} _c} _d} = {{{{{{ C} ^a} ^b} _c} _d} + {{{2}} {{P}} {{\\alpha}} \\cdot {{{{ Î´} ^a} _c}} {{{{ Î´} ^b} _d}}}{-{{{2}} {{P}} {{\\alpha}} \\cdot {{{{ Î´} ^a} _d}} {{{{ Î´} ^b} _c}}}} + {{{P}} {{\\alpha}} \\cdot {{\\beta}} \\cdot {{{{ Î´} ^a} _c}} {{{{ Î´} ^b} _d}}}{-{{{P}} {{\\alpha}} \\cdot {{\\beta}} \\cdot {{{{ Î´} ^a} _d}} {{{{ Î´} ^b} _c}}}} + {{{P}} {{\\alpha}} \\cdot {{{ u} ^a}} {{{ u} _c}} {{{{ Î´} ^b} _d}}}{-{{{P}} {{\\alpha}} \\cdot {{{ u} ^a}} {{{ u} _d}} {{{{ Î´} ^b} _c}}}}{-{{{P}} {{\\alpha}} \\cdot {{{ u} ^b}} {{{ u} _c}} {{{{ Î´} ^a} _d}}}} + {{{P}} {{\\alpha}} \\cdot {{{ u} ^b}} {{{ u} _d}} {{{{ Î´} ^a} _c}}} + {{{\\alpha}} \\cdot {{\\beta}} \\cdot {{\\rho}} \\cdot {{{{ Î´} ^a} _c}} {{{{ Î´} ^b} _d}}}{-{{{\\alpha}} \\cdot {{\\beta}} \\cdot {{\\rho}} \\cdot {{{{ Î´} ^a} _d}} {{{{ Î´} ^b} _c}}}} + {{{\\alpha}} \\cdot {{\\rho}} \\cdot {{{ u} ^a}} {{{ u} _c}} {{{{ Î´} ^b} _d}}}{-{{{\\alpha}} \\cdot {{\\rho}} \\cdot {{{ u} ^b}} {{{ u} _c}} {{{{ Î´} ^a} _d}}}}{-{{{\\alpha}} \\cdot {{\\rho}} \\cdot {{{ u} ^a}} {{{ u} _d}} {{{{ Î´} ^b} _c}}}} + {{{\\alpha}} \\cdot {{\\rho}} \\cdot {{{ u} ^b}} {{{ u} _d}} {{{{ Î´} ^a} _c}}}{-{{{P}} {{\\alpha}} \\cdot {{\\beta}} \\cdot {{n}} {{{{ Î´} ^a} _c}} {{{{ Î´} ^b} _d}}}} + {{{P}} {{\\alpha}} \\cdot {{\\beta}} \\cdot {{n}} {{{{ Î´} ^a} _d}} {{{{ Î´} ^b} _c}}}}$<br>\n", outputtype="html", uid=47},
	{hidden=false, input="print'<h1>Example: Electromagnetic stress-energy</h1>'", output="<h1>Example: Electromagnetic stress-energy</h1><br>\n", outputtype="html", uid=48},
	{hidden=false, input="mu0 = var'\\\\mu_0'", output="${\\mu_0}$", outputtype="html", uid=52},
	{hidden=false, input="Tab_EM_def = T'^a_b':eq(frac(1, mu0) * (-F'^a_u' * F'^u_b' + frac(1,4) * delta'^a_b' * F'^a_b' * F'^b_a'))", output="${{{ T} ^a} _b} = {{{\\frac{1}{{\\mu_0}}}} {{\\left({{ {-{{{ F} ^a} _u}} {{{{ F} ^u} _b}}} + {{{\\frac{1}{4}}} {{{{ Î´} ^a} _b}} {{{{ F} ^a} _b}} {{{{ F} ^b} _a}}}}\\right)}}}$", outputtype="html", uid=51},
	{hidden=false, input="", output="", outputtype="html", uid=53}
}